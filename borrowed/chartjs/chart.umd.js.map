{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.0/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.js","../src/helpers/helpers.config.js","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.0\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","EXPANDO_KEY","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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"}