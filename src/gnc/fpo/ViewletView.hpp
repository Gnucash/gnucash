#ifndef VIEWLETVIEW_HPP
#define VIEWLETVIEW_HPP

#include "config.h"
#include "libqof/qof/guid.hpp"

extern "C"
{
#include "qof.h"
#include "engine/Account.h"
#include "engine/Transaction.h"
#include "engine/Split.h"
}

#include "gnc/mainwindow.hpp"
#include "gnc/fpo/ViewletModel.hpp"
#include "gnc/AccountItemModel.hpp"
#include "gnc/SplitListModel.hpp"

#include <QtCore>
#include <QAbstractItemModel>
#include <QtGui>
#include <QWidget>

namespace gnc
{
class ViewletModel;

class ViewletView : public QWidget
{
    Q_OBJECT
public:
    explicit ViewletView(QWidget * parent = 0, QHBoxLayout * FPOLayout = NULL);
    void loadAccountsTreeComboBox(AccountListModel * const m_accountsListModel);

    /* Call the appropriate method to set the viewlet of that type */
    void defaultVSet(QWidget * parent, QHBoxLayout * FPOLayout);
    void leftVSet(QWidget * parent, QHBoxLayout * FPOLayout);
    void rightVSet(QWidget * parent, QHBoxLayout * FPOLayout);

    void leftVUpdate();
    void rightVUpdate();

Q_SIGNALS:
    void fileLoaded();

public Q_SLOTS:
    void defaultVUpdate();

private:
    ViewletModel *viewletModel;
    AccountListModel *accountsList;

    QString txnDate;
    QString txnDescription;
    QString splitAccount;
    QString splitAmount;

    QVBoxLayout *defaultVLayout;
    QVBoxLayout *leftVLayout;
    QVBoxLayout *rightVLayout;

    QVBoxLayout *accountLayout;
    QVBoxLayout *descriptionAmountLayout;

    /* A simple list to store widgets generated by any of the three
       viewlet types. When the viewlet updates, a new viewlet could
       be drawn by first removing the old widgets in this list. */
    QList<QWidget *> viewletWidgetsList;
    QList<QWidget *> viewletWidgetContainersList;

    /** @bugid_1 */
    QComboBox * comboAccountsList;    

    /** @todo */
    ::SplitList * pSplitList;
    ::Account * selectedAccount;
    int selectedAccountIndex;

    /* Widget generator */
    void setLabel(QString data, QString objectName, QVBoxLayout *layout);

    /* Viewlet generator methods */
    void defaultVDraw();
    void defaultVRemoveWidgets();
    //void leftVDraw();
    void leftVRemoveWidgets();
    //void rightVDraw();
    void rightVRemoveWidgets();

    void dateCheckOutput();
    void accountCheckOutput();
    void descriptionAmountOutput();

private Q_SLOTS:
    void leftVLoad();
    void rightVLoad();
};

} // END namespace gnc

#endif // VIEWLETVIEW_HPP
