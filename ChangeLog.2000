2000-12-20  Bill Gribble  <grib@billgribble.com>

	* src/scm/report.scm: minor changes to allow report URLs
	(mainly a structure for "instantiated" reports and a global index
	of instantiated reports).

	* src/scm/help-topics-index.scm: first pass at an index of the
	user manual.  Mainly just to see how it looks.

	* src/gnome/window-report.c: major surgery.  Add embedded
	parameters editor, constructor option for putting in an external
	container, popup menu when no toolbar.

	* src/gnome/window-help.c: major surgery. add topics browser, 
	keyword search, etc etc.  

	* src/gnome/print-session.{c,h}: fix b0rken printing stuff and
	start using gnome-print's print dialog and preview.  Now prints to
	PDF!
	
	* src/gnome/gnc-html*.c: new html infrastructure.  gnc-html.c is
	the basic struct and operations; gnc-html-history is the history
	object; gnc-html-embedded is support for creating embedded graphs
	in HTML.

	* gnc-dialogs.glade: get rid of homemade print preview window; 
	we're using gnome's now.  Add nifty features to help and 
	report windows.

	* src/gnome/dialog-options.c: redo to allow embedding in a 
	pane within a report window.  this means not being a 
	GnomePropertyBox.

	* src/engine/gnc-commodity.c: memory management cleanups 
	(thanx memprof!)

	* src/engine/Query.c: get rid of Split** internally and in 
	return from xaccQueryGetSplits

	* src/SplitLedger.c: update for GList return from 
	xaccQueryGetSplits

	* doc/html/C/guppi*.html: some simple demos of the guppi
	plot system.  You can get at them through the help topics
	browser.

	* build-help-index.pl : a dirt stupid HTML index builder. 
	Constructs a DB2 file from a list of input files. 

	* Add configure checks for guppi, libghttp
	

2000-12-18  Dave Peticolas  <dave@krondo.com>

	* src/register/gnome/quickfillcell-gnome.c: add support for mb
	char sets

	* src/register/gnome/pricecell-gnome.c: add support for mb char
	sets

	* src/register/gnome/gnucash-sheet.c: add support for mb char sets

	* src/register/gnome/datecell-gnome.c: add support for mb char
	sets

	* src/register/gnome/combocell-gnome.c: add support for mb char
	sets

	* src/register/numcell.c: add support for mb char sets

	* src/register/basiccell.c: add support for mb char sets

	* src/register/QuickFill.c: add support for mb char sets

2000-12-14  Robert Graham Merkel  <rgmerk@mira.net>

	* src/guile/Makefile.am: replace hardwired g-wrap module dir
	with value from configure.in.

	* src/engine/gnc-associate-account.[ch] : New files with code for
	associating income/expense accounts with a stock account. Not yet
	hooked up to the UI.

2000-12-13  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/text-export.scm: kill pointer-token*

	* src/scm/report/transaction-report.scm: minor formatting changes.

	* src/scm/report/taxtxf.scm: kill pointer-token*

	* src/scm/report/folio.scm: use new g-wrap enum support.

	* src/scm/report/budget-report.scm:
	disable report until we fix the enumeration usage.

	* src/scm/report/balance-and-pnl.scm: kill pointer-token*

	* src/scm/report/average-balance.scm: minor formatting changes.

	* src/scm/report-utilities.scm: kill pointer-token*
	(gnc:account-has-shares?): use new g-wrap enum support.

	* src/scm/qif-import/qif-to-gnc.scm: kill pointer-token*

	* src/scm/qif-import/qif-parse.scm:
	delete unused gif-parse:print-acct-type

	* src/scm/qif-import/qif-guess-map.scm: kill pointer-token*

	* src/scm/main.scm
	(gnc:main): add handle-batch-mode-item so --evaluate works.

	* src/scm/engine-interface.scm: kill pointer-token*.

	* src/scm/c-interface.scm: kill pointer-token*.

	* src/quotes/gnc-prices-2.in: various small fixes (big ones later).

	* src/optional/swig/.cvsignore: add Makefile Makefile.in

	* src/guile/option-util.c
	(gnc_option_db_register_change_callback): update for new g-wrap.

	* src/guile/guile-util.c
	(gnc_copy_split): update for new g-wrap.
	(gnc_copy_split_scm_onto_split): update for new g-wrap.
	(gnc_copy_trans): update for new g-wrap.
	(gnc_copy_trans_scm_onto_trans_swap_accounts): update for new g-wrap.
	(gnc_glist_account_ptr_to_scm): use gnc_glist_to_scm_list.
	(gnc_scm_to_glist_account_ptr): use gnc_scm_list_to_glist.
	(gnc_scm_to_commodity): update for new g-wrap.
	(gnc_commodity_to_scm): update for new g-wrap.
	(gnc_glist_string_to_scm): double speed - use stack.
	(gnc_scm_to_glist_string): don't reverse result.
	(gnc_glist_commodity_ptr_to_scm): update for new g-wrap.
	use gnc_glist_to_scm_list.
	(gnc_scm_to_glist_commodity_ptr): use gnc_scm_list_to_glist.

	* src/guile/gnucash.c.in
	(gnucash_main_helper): add g-wrap module dir to %load-path.
	(gnucash_main_helper): call init_g_wrapped_gnc, not init_gnc.

	* src/guile/gnc.gwp: update for the new g-wrap.

	* src/guile/gnc-helpers.h: add prototypes for new functions.

	* src/guile/gnc-helpers.c
	(glist_to_scm_list_helper): new (private) function.
	(gnc_glist_to_scm_list): new public function.
	(gnc_scm_list_to_glist): new public function.
	(glist_map_helper): new (private) function.
	(gnc_glist_scm_map): new public function.
	(gnc_glist_scm_for_each): new public function.
	(gnc_gettext_helper): always strdup result.
	(gnc_timespec2timepair): use gint64, not long long.
	(gnc_timepair2timespec): use gint64, not long long.
	(gnc_timepair_p): use more accurate test (including range check).
	(gnc_scm_traversal_adapter): use new g-wrap wcp code.
	(gnc_gint64_to_scm): new public function.
	(gnc_scm_to_gint64): new public function.
	(gnc_gh_gint64_p): new public function.
	(gnc_scm_to_numeric): use gint64, not long long.
	(gnc_numeric_to_scm): use gint64, not long long.
	(gnc_numeric_p): use gint64, not long long.

	* src/guile/Makefile.am: update for new g-wrap.

	* src/gnome/top-level.c (gnc_ui_main): use new g-wrap wcp code.

	* src/gnome/druid-qif-import.c: use new g-wrap wcp code.

	* src/engine/gnc-commodity.c: g_strdup the key.
	(gnc_commodity_table_delete_namespace): g_free the key.
	These fixes are probably not sufficient.

	* src/engine/Account.c: make temp warnings more informative.

	* configure.in: update for new g-wrap.
	check for guile bug (sizeof long_long >= long long).
	check that sizeof unsigned long >= guint32.

	* acinclude.m4: update for new g-wrap.

2000-12-08  Dave Peticolas  <dave@krondo.com>

	* src/gnome/gnc-dateedit.c: use more care when using parsed
	date values.

	* src/register/gnome/datecell-gnome.c: use more care when using
	parsed date values.

	* src/engine/Query.c: make sure to use end-of-day times for the
	end date in a search.

	* src/engine/date.c: remove xaccValidateDate -- use mktime instead.
	Use more care when setting struct tm values, especially with is_dst.

2000-12-05  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/account-tree.[ch] (gnc_account_tree_unselect_account):
	Add unselect account functionality as required by mainwindow
	account tree

2000-12-04  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/mainwindow-account-tree.[ch]: new file.  Widgetizes
	the current contents of the main window in preparation for
	pane-ization.

	* src/gnome/window-main.c: modified to take account of the above.

2000-11-17  James LewisMoss  <dres@debian.org>

	* src/doc/design/reports.texinfo (Reports): Reorder option
	descriptions to match the order in the example function.

	* src/doc/design/Makefile.am (gnucash_design_TEXINFOS): Add info
	files to clean list (why the hell aren't they already cleaned?)

2000-11-15  James LewisMoss  <dres@debian.org>

	* src/doc/design/register.texinfo (Split Register): Move a little
	something around to make sure dvi/ps output doesn't spill off side
	of page.

	* src/doc/design/intro.texinfo (Introduction): Move a little
	something around to make sure dvi/ps output doesn't spill off side
	of page.

	* src/doc/design/fdl.texinfo (GNU Free Documentation License):
	Comment out @bye causing texi2dvi to quit not completing the
	output. 

2000-11-09  Bill Gribble  <grib@billgribble.com>

	* src/engine/gnc_numeric.c: fix remainder-handling error

	* src/scm/qif-import/qif-dialog-utils.scm: only ask about 
	stocks that are in the QIF files being loaded.

	* src/scm/qif-import/qif-file.scm: add progress bar to file read

	* src/scm/qif-import/qif-to-gnc.scm: add progress bar to 
	transaction mark and import.

2000-11-08  Bill Gribble  <grib@billgribble.com>

	* src/engine/SplitLedger.c: use new SetShareAmount/SetValue
	semantics (need to make sure this is correct!)

	* src/engine/Group.c: fix the "splits in GList with NULL data"
	problem.

	* src/engine/Transaction.c: get rid of Set***Directly functions,
	and modify the gnc_numeric versions of SetValue and SetShareAmount
	to use the direct semantics (i.e. SetValue doesn't affect the
	ShareAmount any more unless you use the deprecated double API).

	* src/engine/gnc-numeric.c: fix gnc_numeric_convert and
	double_to_gnc_numeric to ameliorate overflow problems.  This
	should fix the wrong balance problems people are seeing.

	* src/gnome/druid-qif-import.c: make selection persistent in
	account/cat pick lists

	* g-wrap gnc-numeric datatype and API; shuffle the Scheme API in
	the same way the C was done to add the new gnc-numeric API using
	the "real" function names and deprecate the old double API by
	prefixing the names with d-.  Now (for example)
	gnc:split-set-value takes a gnc_numeric arg, and
	d-gnc:split-set-value takes a double.  All calling scheme code was
	sed'ed to make this change.

	* src/scm/qif-import/qif-dialog-utils.scm: fix stock name regexp
	parsing bug in QIF importer.  This should fix the crash that many
	people have reported.

	* src/scm/qif-import/qif-file.scm: fix an Opening Balance
	processing bug that was causing some opening balance transactions
	to be duplicated.

	* src/scm/qif-import/qif-to-gnc.scm: fix double-counting of
	Commissions.  Change to use gnc_numeric and new Set semantics;
	this should (maybe) fix some reported off-by-a-penny problems.
	
2000-11-05  Rob Browning  <rlb@cs.utexas.edu>

	* src/engine/io-gncxml-w.c: sort commodities by namespace and id
	before writing so we get stable output.

2000-10-30  Dave Peticolas  <dave@krondo.com>

	* src/gnc-exp-parser.c: modify to use gnc_numerics instead of
	doubles.

	* src/engine/gnc-numeric.c: special case num == 0 to prevent
	divide by zero exception.

2000-10-27  Dave Peticolas  <dave@krondo.com>

	* src/calculation/expression_parser.c: handle (num) as -num.

2000-10-26  Dave Peticolas  <dave@krondo.com>

	* src/engine/util.c (DxaccParseAmount): handle (num) as -num.

2000-10-23  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/main.scm:
	(gnc:*batch-mode-things-to-do*): new var - keep track of startup bits.
	(gnc:main): add --load processing for "things-to-do".

	* src/scm/engine-utilities.scm:
	(gnc:filename->account-group): new - likely temporary.
	(gnc:call-with-account-data-from-file): new - likely temporary.

	* src/scm/command-line.scm (gnc:*arg-defs*): add --load option in
	addition to --evaluate.

	* src/engine/sql/PostgresBackend.c: handle changes in the rest of
	the code.

	* src/engine/kvp_frame.c: change the datatype a little to pull the
	union tag into the main struct.  Also update the functions and
	datatypes to more closely mirror glib types.  i.e. lists are now
	just GLists that must contain only kvp_value pointers.  The kvp
	docs have *not* been updated to reflect these changes (nor the
	changes listed below).
	(kvp_frame_set_slot): now setting a slot to a NULL value deletes
	the slot.  This is not in the docs yet.
	(init_frame_body_if_needed): new function - only initialize the
	guts of the kvp_frame if we need them.  This helps in some
	situations and should be free otherwise.  All the other functions
	should handle this properly now.
	(kvp_value_new_binary_nc): new function - create a new binary
	object using the pointer given directly.
	(kvp_frame_for_each_slot): new function.
	(kvp_value_compare): new function.
	(kvp_frame_compare): new function.

	* src/engine/kvp_frame.h: accommodate changes to kvp_frame.c.
	
	* src/engine/guid.c:
	(guid_compare): new function.
	(guid_hash_to_guint): hash function from glib.
	(guid_hash_table_new): new function.
	(guid_g_hash_table_equal): new function.

	* src/engine/guid.h: accommodate changes to guid.c.

	* src/engine/date.c:
	(timespec_equal): new function.

	* src/engine/date.c: accommodate changes to date.c.
	
	* src/engine/Transaction.c: update all functions to mark the
	account's dirty flags when needed.
	(xaccTransGetSlot): deleted - replaced by xaccTransGetSlots.
	(xaccTransSetSlot): deleted - replaced by xaccTransGetSlots.
	(xaccTransGetSlots): new function.
	(xaccTransEqual): new function.
	(DATE_CMP): don't use pointer to pointer args (unnecessary).
	(xaccSplitDateOrder): now a total order - sort on guid if needed.
	(xaccSplitOrder): deleted - unused.
	(xaccTransOrder): now a total order - sort on guid if needed.
	(xaccTransSetDocref): deleted.
	(xaccTransGetDocref): deleted.

	* src/engine/Transaction.h: accommodate changes to Transaction.c.

	* src/engine/TransactionP.h: accommodate changes to Transaction.c.
	
	* src/engine/Session.c:
	(xaccSessionGetFileError): new function - migrate away from using
	global for error status.
	(xaccSessionBegin): change semantics - a begin does *not* load the
	file automatically now.  You must call xaccSessionLoad for that.
	This is better, particularly in the SaveAs case when the load is
	wasteful, and, until we fix the GUID code up so that loading the
	same file twice doesn't cause a detonation, safer.
	(xaccSessionBegin): change semantics - same as for
	xaccSessionBegin.
	(xaccSessionLoad): new function - loads the session data.
	(xaccSessionSaveMayClobberData): new function - predicate.
	(xaccSessionSave): change semantics - don't delete the file if
	topgroup is NULL.  This is too scary given all the other changes.
	We can bring it back later if needed, but I'd probably rather see
	an xaccSessionPurgeStorage, or similar.
	
	* src/engine/Session.h: support changes to Session.c.

	* src/engine/Makefile.am: handle new, deleted, and renamed files.

	* src/engine/Group.c: handle vanished account id's, etc.
	(xaccGroupEqual): new function.
	(xaccGroupVisitUnvisitedTransactions): new function.
	(xaccGroupForEachTransaction): new function.
	(xaccGroupMapAccounts): new function (probably going away later).
	(xaccGroupForEachAccountDeeply): ditto.

	* src/engine/Group.h: handler changes to Account*'s and to Group.c.

	* src/engine/GNCId.c:
	(xaccGetAndResetEntityTable): new function - needed when you want
	to load two files representing the same data for
	comparison.
	(xaccSetEntityTable): new function - needed when you want
	to load two files representing the same data for
	comparison.

	* src/engine/GNCIdP.h: accommodate changes to GNCId.c

	* src/engine/Account.c: many changes, removed some unused fields,
	changed Account's to have a GList of splits rather than a NULL
	terminated array of pointers - allowed optimizing several things
	and made the code cleaner in spots.
	(xaccAccountBeginEdit): remove defer argument - difficult to
	handle with nesting - may add later if really needed.  Change this
	and
	(xaccAccountCommitEdit): to handle nesting.  Fix up all setter
	routines to respect Begin/Commit, including ones for splits over
	in Transaction.c.
	(xaccInitAccount): Add/use sort_dirty and balance_dirty flags.
	Change kvp_data to always be initialized (also changed kvp_frames
	to be lighter weight when empty).
	(xaccAccountEqual): new function.
	(xaccSortSplits): new function.
	(xaccAccountBringUpToDate): new function.
	(xaccAccountGetSlot): deleted - replaced by xaccAccountGetSlots
	(xaccAccountSetSlot): deleted - replaced by xaccAccountGetSlots
	(xaccAccountGetSlots): new function - returns kvp_frame.
	(xaccAccountGetID): deleted - accounts no longer have IDs.
	(xaccAccountGetID): deleted - accounts no longer have flags.
	(xaccAccountCheckDateOrder): renamed to xaccAccountFixSplitDateOrder.
	(xaccCheckTransDateOrder): renamed to xaccTransFixSplitDateOrder.
	(xaccAccountSetNotes): notes now stored in slot "notes".
	(xaccAccountGetNotes): ditto.
	(xaccAccountTypeEnumAsString): new function - required by text IO.
	(xaccAccountStringToType): new function - required by text IO.
	(xaccAccountSetPriceSrc): prices now stored in slot "old-price-source".
	(xaccAccountGetPriceSrc): ditto.
	(xaccAccountVisitUnvisitedTransactions): new function.
	(xaccAccountForEachTransaction): new function.
	
	* src/engine/Account.h: changes to accommodate above changes to
	Account.c.

	* src/engine/Account.h: changes to accommodate above changes to
	Account.c.

	* src/engine/io-gncxml-r.c: new xml format reader.  This has a
	semi-abstract incremental configurable low-ish memory XML tree
	parser inside which should later be broken out into a separate
	file.

	* src/engine/io-gncxml-w.c: new xml format writer.  This is pretty
	straightforward, but due to limitations in libxml, has large
	memory requirements.  It has to build the entire XML tree in RAM
	before it writes anything.

	* src/engine/io-gncxml.h: new file - the current XML handling does
	*not* have any transparent file compression.  Expect that soon -
	it doesn't make the performance any worse (thank goodness).

	* src/engine/io-gncbin-r.c: renamed from src/engine/FileIO.c.
	Only the reader is still active.  All writing is as XML now.

	* src/engine/io-gncbin.h: renamed from src/engine/FileIO.h.

	* src/engine/FileIO.c: new file - now the meta-level file that has
	functions that handle the various underlying file types.  Any old
	docref fields are stored in an "old-docref" slot and any old price
	sources are stored in an "old-price-source" slot.  Handle the fact
	that account id's are gone.

	* src/engine/FileIO.h: new file.

	* make-gnucash-patch.in: ignore some more autogen files.

	* src/FileDialog.c: update to handle new Session* semantics.
	Saving and SavingAs are not the same anymore, session-wise.  We
	don't perform a pointless (and GUID dangerous) load before we
	SaveAs.

	* Many changes, not all of which will be documented right now.
	This patch must get out.  I'll come back and fix this up later.
	The highlights are...

2000-10-16  Bill Gribble  <grib@billgribble.com>

	* Patch for new numeric representation, new commodity 
	  representation, and rewritten QIF importer.  

	  - numeric format: the engine's internal representation of values
	  changed from 'double' to 'gnc-numeric', an exact number format.
	  see src/doc/gnc-numeric.txt.  This patch is step 1; the old
	  'double' engine API remains, but the names have been changed
	  from (for example) xaccSplitSetValue to DxaccSplitSetValue. The
	  D means deprecated.  Will be gradually migrating the usage of
	  doubles to gnc-numeric throughout gnucash, eventually removing
	  the Dxacc API completely.  ATM, there is no scheme support for
	  gnc-numeric, so I just left the Scheme API alone (old function
	  names still work, and work the same way).

	  - commodity representation: up to now, the engine has just used
	  strings to represent currencies.  Now we use a struct
	  'gnc-commodity', which has more information about the
	  currency/stock/commodity than its name, including what exchange
	  it trades on and what the resolution of transactions is in
	  fractional units.  When you read in an old gnucash file, you
	  will get a 'wizard' that will ask questions about the currencies
	  and stocks in your old file.

	  - QIF importer: I redid the GUI to be more of a wizard style.
	  This should get rid of a lot of people's problems using it since
	  it's more step-by-step oriented.

	* src/scm/qif-import/qif-to-gnc.scm: set Reconcile correctly.
	Also numerous other small changes.

	* src/scm/qif-import/qif-parse.scm: handle 20000101 date formats
	and MiscExpX category lines correctly.

	* src/scm/qif-import/qif-file.scm: correctly handle ambiguous 
	date format by asking the right answer.

	* src/scm/qif-import/qif-dialog-utils.scm: use the correct account
	separator char for automatically created accounts 

	* src/scm/hooks.scm: added a file-opened-hook that gets run 
	any time a gnucash file is opened.  

	* src/engine/gnc-engine.{c,h}: new files for global engine
	meta-operations.  I mainly needed it to add a global list of known
	'commodities' (currencies, stocks, etc), but there's now an
	gnc-engine-init function called at startup with settable hooks.

	* src/gnome/dialog-account.c: add "select" buttons for account
	security and currency.  Still need to make "smallest currency
	unit" configurable per-account, but need to fix common-currency
	problem first.

	* src/gnome/dialog-find-transactions.c: use gnc_dateentry widget

	* src/engine/Translog.c: warning! log format for numbers is 
	now "%Ld/%Ld", numerator/denominator.

	* src/engine/Query.c: change date query functions to be more
	useful.  Start and end dates are optionally ignored, making it 
	possible to say "any date before.." or "any date after.." 

	
2000-09-16  Dave Peticolas  <dave@krondo.com>

	* src/register/table-allgui.c: re-implement using gtables.

	* src/register/cellblock.c: re-implement using gtables.

	* src/register/gtable.c: implementation of a dynamic 2-d array.

2000-09-13  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c (xaccSRSaveChangedCells): don't copy memo
	and action to other split.

2000-09-12  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_close_cb):
	disconnect amount edit entry signals to avoid gtk warnings.

	* src/engine/Transaction.h: make xaccInitTransaction a private
	function.

	* src/scm/qif-import/qif-to-gnc.scm: Don't init a new transaction.
	gnc:transaction-create does this automatically. Doing it again leaks
	memory.

2000-09-11  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-transfer.c: incorporate amount editing widget
	into the transfer dialog.

	* src/gnome/gnc-amount-edit.c: new widget to allow amount editing
	with expression parsing.

2000-09-05  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/date-utilities.scm ((gnc:reldate-initialize)): New
	function - initialise explicitly at startup rather than in ad-hoc
	manner

2000-08-31  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/balance-and-pnl.scm: Bug fixes for new date
	options.

	* src/scm/report/transaction-report.scm: Bug fixes for new date
	options.

	* src/scm/report/budget-report.scm: Bug fixes for new date options.

2000-08-30  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/hello-world.scm: A couple of new functions to
	test the relative and combination date style options.

	* src/scm/report/*.scm: Modified date options to take the new
	function.  Most are still using absolute options at this stage,
	will get modified to use relative dates later.

	* src/scm/options.scm (gnc:make-option): new argument
	(option-data-fns) for manipulating multi-choice style options.
	Changes to option-makers to either support this.
	(gnc:make-date-option): modified to support relative and
	combination dates.

	* src/scm/date-utilities.scm: Extensive additions for manipulating 
	relative dates.

	* src/guile/option-util.c: Support for new relative-date and
	combination options , and use of scheme getters
	rather than direct data structure manipulation.
	(gnc_option_db_lookup_date_option): modified to
	support relative and combination date options.
	(gnc_option_date_option_get_subtype: new function.

	* src/guile/guile-util.c (gnc_timepair2timespec): Check to make
	sure it's a timepair before doing conversion.

	* src/gnome/dialog-options.c: Extensive changes to support relative
	and combination date options.  Also changed multichoice callback
	to use wrapped scheme getter rather than directly manipulating
	scheme data structure.

	* make-gnucash-patch.in: Exclude generated HTML.

2000-08-26  Dave Peticolas  <dave@krondo.com>

	* src/engine/Group.c (xaccGetAccountRoot): remove unnecessary
	casts.

	* src/gnome/window-reconcile.c
	(gnc_ui_reconcile_window_delete_cb): rewrite to use g_lists.

2000-08-23  Dave Peticolas  <dave@krondo.com>

	* src/engine/kvp_frame.c: use g_strdup, not strdup.

	* src/calculation/expression_parser.c: use glib memory routines.
	(exit_parser): fix a bug where pe->named_vars was freed twice.

2000-08-22  Dave Peticolas  <dave@krondo.com>

	* src/engine/Transaction.c (xaccSplitSetBaseValue): check to
	make sure the security is not "" before allowing price changes.

	* src/gnome/window-register.c (gnc_register_check_close): use
	xaccSRCancelCursorTransChanges to cancel any pending changes.

2000-08-21  Dave Peticolas  <dave@krondo.com>

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): fix
	a memory leak. xaccTransGetDateStr returns a malloc'd string.

	* src/engine/: Move transaction date routines from date.c to
	Transaction.c. Move definition of Timespec from Transaction.h
	to date.h. Some code cleanup in date.c.

	* src/register/QuickFill.c (qfInsertTextRec): When inserting new
	strings, don't replace older strings that are prefixes of the new
	string.

	* src/engine/gnc-common.h: remove gncBoolean type and constants.
	Replace all uses with glib versions.

2000-08-12  Dave Peticolas  <dave@krondo.com>

	* src/engine/Transaction.c (xaccSplitSetBaseValue): don't adjust
	the price when the base currency is the security of the account.

2000-08-10  Dave Peticolas  <dave@krondo.com>

	* src/register/table-allgui.c (gnc_table_physical_cell_valid): bug
	fix -- get the virtual cell of the target location before getting
	the cellblock.

2000-08-09  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-utils.c: remove unused code

	* src/gnome/dialog-account.c: new file implementing the
	consolidated account add and account edit windows using glade.

2000-08-07  Dave Peticolas  <dave@krondo.com>

	* src/register/*.c: Use glib memory allocation routines.

	* src/register/cellblock.c: fix memory leaks and use glib memory
	allocation routines.

	* src/register/table-allgui.c: reimplement the Table code using
	glib's dynamic arrays. Clean up the code and homogenize the
	function naming convention.

2000-08-04  Dave Peticolas  <dave@krondo.com>

	* src/register/table-gnome.h: remove unused data members

	* src/register/basiccell.h: remove the pixel_width argument
	to the realize callback, it is no longer used.

	* src/register/table-allgui.c: remove the gnc_table_column_width
	call.

2000-08-07  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/tip-of-the-day.scm: don't initialize at startup.

	* src/scm/main.scm (gnc:*batch-mode-forms-to-evaluate*): new
	global to hold forms added by --evaluate for execution after
	startup.
	(gnc:main): support --evaluate properly.

	* src/scm/engine-utilities.scm (gnc:transaction-map-splits): moved
	here.
	(gnc:group-map-accounts): moved here.

	* src/scm/command-line.scm (gnc:*arg-defs*): add --evaluate
	option.  This should be considered beta, and it's not documented
	yet, but it's useful for me right now, we need something like it,
	and I'd like others to see what they think.  Also, this will only
	work right when I finish fixing up tip-of-the-day to not
	initialize when the file loads.

	* src/pixmaps/Makefile.am: minor typo.

	* src/guile/option-util.c: include string.h

	* src/guile/guile-util.c: include string.h

	* src/guile/gfec.c: include string.h

	* doc/gnucash.1: change filename extension in example to .gnc

	* configure.in: always report missing templates as an error.

	* README: updates (also change = to # for section seps (helps CVS))

2000-07-22  Dave Peticolas  <dave@krondo.com>

	* src/gnome/window-reconcile.c: After reconciliation, if the
	account is a credit card account, automatically pop up a transfer
	window with the appropriate amount and accounts.

2000-07-21  Dave Peticolas  <dave@krondo.com>

	* src/calculation/fin.c: Some cleanup and renaming of function
	names to be longer and more descriptive.

	* src/gnome/dialog-transfer.c: Add Num field to the transfer
	dialog. Add APIs to change the amount, the description, and the
	accounts. Fix a bug in the default sense of the show/hide buttons.

2000-07-20  Dave Peticolas  <dave@krondo.com>

	* src/gnome/top-level.c (gnc_ui_destroy_all_subwindows): destroy
	open transfer windows.

	* src/Destroy.c: remove notes window functions.

	* src/AccWindow.h: remove notes window functions.

	* src/gnome/dialog-transfer.c: Make transfer dialog modeless.

2000-07-19  Dave Peticolas  <dave@krondo.com>

	* src/gnome/account-tree.c: Use income_expense instead of
	category for names.

2000-07-12  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c (LedgerAutoCompletion): simplify, and fix a
	bug with split auto-completion.

	* src/scm/bootstrap.scm.in: add HOME/.gnucash to scm search path.

2000-07-04  Dave Peticolas  <dave@krondo.com>

	* src/scm/bootstrap.scm.in: bump up the stack limit

	* src/engine/date.c (xaccValidateDate): move this function from
	src/register/datecell.c to here, so it can be used elsewhere.

	* src/gnome/gnc-dateedit.c: make the widget respond to the same
	accelerators as the register date cell.

2000-07-03  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/c-interface.scm: Added scheme definition for
	pointer-token-null? if not already defined by g-wrap. Fixes bug
	when compiling with g-wrap >= 0.9.4.

2000-06-28  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-budget.c (entry_down_button_clicked): bug fix.

	* src/gnome/dialog-options.c: implement font options.

	* src/scm/prefs.scm: add options for the register fonts.

	* src/gnome/top-level.c: configure the register fonts from
	callbacks.

	* src/register/gnome/gnucash-style.c: make the register font and
	hint fonts configurable outside the register.

2000-06-28  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/dialog-totd.c: If somebody tries to open a second
	tip of the day window, just raise the original.  Fixes a crash
	when somebody tried to do this before.

2000-06-27  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/dialog-totd.c: Added code to make "Tip of the day"
	dialog modeless

2000-06-27  Dave Peticolas  <dave@krondo.com>

	* src/gnome/top-level.c (gnucash_ui_init): set the reconciled cell
	string getter to the dialog-utils function for i18ning the reconcile
	flag value.

	* src/engine/Transaction.c (xaccSplitSetReconcile): make sure the
	reconciled flag given is good.

	* src/register/splitreg.c: modify for the changes in the reconcile
	cell.

	* src/SplitLedger.c: modify for the changes in the reconcile cell.

	* src/register/recncell.c: make the reconcile cell a real object,
	not just a BasicCell with some extra functions. Add functionality
	for distinguishing between the flag value and the displayed value.

2000-06-26  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-utils.c (gnc_get_reconcile_str): new function.
	Return i18n'd string for reconciled flag.

	* src/gnome/reconcile-list.c: use i18n'd reconciled flag string.

	* src/scm/tip-of-the-day.scm: put the check for whether tips
	should be shown or not inside the hook. We can't do the check
	here because the options haven't been loaded yet.

	* src/scm/options.scm: fix bug in writing options. Use 'write'
	to output section and option names for proper escaping.

2000-06-27  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/date-utilities.scm: Added date-granularity timepair
	comparison functions. Removed direct access functions to the time
	structures in various functions (Dave also worked on this).

	* src/scm/report/transaction-report.scm: Changed to use date
	comparison functions in date-utilities.scm.

2000-06-26  Robert Graham Merkel  <rgmerk@mira.net>

	* src/guile/global-options.[ch] (gnc_option_refresh_ui_by_name):
	New function to make refreshing the GUI options possible from C as
	well as scheme.
	(gnc_set_boolean_option): C function to set boolean options from
	outside the options dialog.

	* src/gnome/dialog-totd.[ch]: New files containing the GUI
	functions for doing tips of the day.

	* src/guile/tip-of-the-day.[ch]: New files with a C interface for
	the scheme tip of the day engine.

	* src/guile/option-util.[ch] (gnc_option_db_set_boolean_option):
	New function to set a boolean option.
	
	* src/scm/tip-of-the-day.scm: New file: an interface for reading
	in and passing tips to the gui in text form.

	* src/scm/tip-list.scm: A list of tips as a Scheme list.  File
	should probably be shifted somewhere else.

	* src/scm/startup.scm: Loads tip-of-the-day.scm

	* src/scm/prefs.scm: Add an option for displaying tips of the day
	at startup.  Also added gnc:support line.

	* src/gnome/window-main.c (gnc_ui_totd_cb): Added menu entries and
	callbacks to add "tips of the day" to help menu.

2000-06-23  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-utils.c (gnc_window_adjust_for_screen): new
	function. if the window size is bigger than the screen, adjust
	it down. Use this for the account add and edit, reconcile, and
	register windows.

	* doc/html/C/projects.html: update last version info

	* doc/html/C/xacc-about.html: update last version info

	* src/guile/gnucash.c.in: update last version info

2000-06-21  Dave Peticolas  <dave@krondo.com>

	* src/register/splitreg.h: break out the register type and the
	register style into two separate struct members, instead of using
	bitmasks. This is much, much simpler.

	* src/optional/swig/Makefile.am (gnucash-engine-perl5_wrap.c):
	remove the -stat argument, it's no longer support in later swig
	versions.

	* src/register/Makefile.am: don't compile table-html.c, it is
	not needed for linking.

	* src/gnome/window-register.c: remove include of table-html.c

	* src/engine/gnc-common.h: use 'gboolean' to typedef gncBoolean.
	We should probably just phase out the use of gncBoolean.

2000-06-20  Dave Peticolas  <dave@krondo.com>

	* src/engine/util.c (xaccParseAmount): accept 8 decimal places
	instead of 6, and truncate if more than 8.

	* src/gnome/dialog-add.c: make this window modeless.
	(gnc_ui_accWindow_ok_cb): don't let the user add an account with
	the same fully-qualified name as another account.

	* src/gnome/top-level.c (gnc_ui_destroy_all_subwindows): destroy
	all the account add windows, too.

	* src/gnome/window-main.c (gnc_refresh_main_window_title): new
	function to put the current filename in the main window title.
	(gnc_refresh_main_window): use the above when refreshing.

	* src/FileDialog.c (gncFileSaveAs): refresh the main window after
	'saving as' to update the filename in the main window.

2000-06-19  Dave Peticolas  <dave@krondo.com>

	* src/guile/gnc.gwp: take out GUIDs for Groups.

	* src/engine/Group.c: take out GUIDs for Groups. Groups are really
	just lists with no additional structure, and giving them GUIDs
	complicates matters without adding any utility. You can always use
	the parent account GUID instead.

	* src/gnome/top-level.c: configure list auto-popping from here.

	* src/register/gnome/combocell-gnome.c: determine whether or not
	to auto-pop lists based on a class variable, and not by looking
	up the guile function. This removes a src/guile dependency from
	src/register/gnome.

2000-06-14  Dave Peticolas  <dave@krondo.com>

	* src/register/gnome/gnucash-item-edit.c (item_edit_show_list):
	make sure the current selected item is visible and, before doing
	so, process all pending events to make sure the list is shown and
	sized first.

2000-06-13  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c: refresh the main window before refreshing the
	register. This makes sure balances are recomputed first.

	* src/engine/Transaction.c (xaccSplitSetBaseValue): mark the split
	as having changed.

	* src/gnome/gnc-currency-edit.c: loosen the restrictions on what
	can be typed in. The 'currency' could potentially be a stock
	symbol.

2000-06-12  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-transfer.c: don't use 'Categories', it's a
	confusing term.

	* src/SplitLedger.c (LedgerAutoCompletion): open transaction
	without deferring rebalancing.

2000-06-09  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm (): commented out
	"merged" style because of conflict with double-column amounts.

2000-06-08  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/average-balance.scm (average-balance-renderer): 
	added a condition to catch incorrectly entered dates without crashing.

2000-06-07  Dave Peticolas  <dave@krondo.com>

	* src/engine/Query.c: fixed a "dave is an idiot" bug in cropping
	the split list.

	* src/gnome/window-register.c (gnc_register_create_menu_bar): don't
	use stock close menu -- it's for closing files not closing windows.

	* src/gnome/dialog-add.c (gnc_ui_accWindow_create_account): don't
	make an opening balance transaction.

	* src/SplitLedger.c: use value, not share amount, for debit/credit
	cells in equity registers.

	* src/gnome/dialog-utils.c (gnc_ui_install_field_strings): set the
	code even if it's blank. Auto-coding doesn't work right now.

2000-06-06  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c (LedgerTraverse): use correct argument for
	exact_cell to gnc_table_find_valid_cell_horiz.
	(LedgerMoveCursor): ditto.

	* src/register/splitreg.c (xaccInitSplitRegister): Don't blank
	zeros in the price cell.

	* src/guile/gfec.c: fix bugs in usage of internal guile functions.
	more cleanup.

2000-06-05  Dave Peticolas  <dave@krondo.com>

	* src/register/splitreg.c (xaccInitSplitRegister): use higher
	precision for stock prices.

	* src/<lots>: moved gui-dependent definitions from
	src/engine/gnc-common.h to src/engine/gnc-ui-common.h.
	Use guint32 instead of home-grown typedef. This touched
	many files.

	* src/guile/guile-util.c (gnc_get_debit_string): make sure to
	return a malloc'd string.

	* src/register/splitreg.c (configLabels): check for NULL strings
	from the label getters.

	* src/gnome/window-register.c (gnc_register_date_window): if 'show
	all transactions' is not set in the preferences, limit it to
	30. Temporary fix for 1.4, this should be configurable.

	* configure.in: changed '! test' to 'test !'.

	* src/engine: removed *Consolidate* functions. These were cruft
	used by the old QIFIO routines.

2000-06-04  Dave Peticolas  <dave@krondo.com>

	* src/engine/util.c: add log level modification functions.

	* src/scm/command-line.scm: add a --loglevel argument to set the
	logging level.

2000-06-04  Rob Browning  <rlb@cs.utexas.edu>

	* */Makefile.am and others: fix up make dist to build a full-blown
	tarfile.

2000-06-04  Dave Peticolas  <dave@krondo.com>

	* src/engine/Session.c (xaccSessionSave): record file writing errors
	in the session error code.

	* src/FileDialog.c (gncFileSave): print an error message in a dialog
	on file-writing errors.

	* src/register/quickfillcell.c (quick_modify): before updating the
	original copy, make sure it's still the same as the old value,
	modulo case.

2000-06-03  Dave Peticolas  <dave@krondo.com>

	* src/engine/FileIO.c: John Goerzen's patch for 64-bit
	architectures.

2000-06-02  Dave Peticolas  <dave@krondo.com>

	* src/register/splitreg.c: added functions for getting cell types
	and getting the locations for cell types.

	* src/SplitLedger.c: add functionality for auto-completion

2000-06-02  Rob Browning  <rlb@cs.utexas.edu>

	* quite a few bugfixes to the automake stuff.

	* guid-md5.* -> md5.* - Dave liked this better, and I did too.

	* src/register/gnome/* - restored ... for now.

2000-06-01  Rob Browning  <rlb@cs.utexas.edu>

	* README: many mods to accommodate new changes, but still unfinished.

	* configure.in: --with-opt-style-install changed to
	--enable-opt-style-install

2000-05-31  Rob Browning  <rlb@cs.utexas.edu>

	* Giant automake switchover.
	doc/html/*/pix/ -> doc/html/*/image/
	intl/* - new directory/contents (filled via gettextize).
	src/doc - new directory to collect src docs.
	src/experimental - new directory.
	src/gg -> src/experimental/gg
	src/cbb -> src/experimental/cbb
	src/optional - new directory for configure --with and --enable bits.
	src/swig -> src/optional/swig - preparation for new quoting system.
	src/swig/perl5 deleted - swig is now just in a single directory.
	src/reports/File.c -> src/guile/File.c
	src/register/gnome/* -> src/register/* - automake wants flat lib dirs. 
	src/qt deleted - docs indicate how to get it if you want it.
	src/motif deleted - docs indicate how to get it if you want it.
	src/g-wrap merged into src/guile.
	src/engine/guid/* -> src/engine - automake wants flat lib dirs.
	man/* -> doc/
	lib/* deleted - nothing needed right now; see lib/README.
	gnucash.gdb-cmds -> doc/
	gnucash.desktop -> src/gnome/
	gnucash deleted - see doc/README.build-system
	etc/config -> src/guile/config
	doc/html/logos/ -> doc/html/C/logos - this should handle intl better.
	doc/build-system -> doc/README.build-system
	doc/aix.txt -> doc/build-aix.txt
	doc/SuSE-6.3.txt -> doc/build-suse.txt
	doc/solaris.txt -> doc/build-solaris.txt
	doc/README -> README - as per GNU coding/automake standards.
	doc/INSTALL -> INSTALL - as per GNU coding/automake standards.
	Makefile.init.in deleted - not needed with automake.
	Makefile.common deleted - not needed with automake.
	Configure-uw7 -> doc/Configure-uw7
	Configure-osr5 doc/Configure-osr5
	ABOUT-NLS - new file.
	AUTHORS - as per GNU coding/automake standards.
	*/Makefile.am - new automake files.
	acconfig.h - aclocal.m4 is now autogenerated, so use this instead.
	Various libtool files automagically added by libtool.
	src/examples/xacc-shell.c -> old/xacc-shell.c

	* src/scm/startup.scm: load depend.scm here.

	* src/scm/report/average-balance.scm: handle new possible #f
	return from gnc:group-get-account-list.

	* src/scm/engine-utilities.scm (gnc:group-get-account-list):
	moved here and reworked to build result in order, no reverse.
	Change to return #f on error so it can be distinguished from an
	empty list.

	* src/scm/engine-utilities.scm: new file.

2000-05-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (configLabels): label the straight xfer
	and xfer to cells as 'Account', label the mirrored xfer as just
	'Transfer'.

	* src/register/gnome/gnucash-header.c
	(gnucash_header_reconfigure): also redraw if the style changes.

2000-05-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/quickfillcell.c: if a quickfill attempt fails,
	replace the string with the original case string.

2000-05-29  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report-2.scm (make-account-subheading): 
	added the ability to display balances at start-of-report date
	when sorting by accounts.  Also replaced gnc:split-get-amount
	(which doesn't exist) with gnc:split-get-value for amount sorting.

	* doc/guile-hackers.txt: Added pointers to g-wrap now that it's
	not part of the main gnucash distribution.

2000-05-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c: some simplification, some additional
	complexity :) Fixed a crash-bug with traversing out of the
	pending transaction and rolling it back. Fixed traversal out
	of the blank line of a multi-split transaction that has been
	edited.

2000-05-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine: removed QIF routines from the engine.

	* src/scm/options.scm: add a currency option type.

	* src/gnome/dialog-options.c: add support for currency options.

	* src/gnome/dialog-utils.c (gnc_ui_account_field_box_create): used
	the new currency editor widget.

	* src/gnome/gnc-currency-edit.c: new widget for picking currencies.

2000-05-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/guile-util.c (gnc_depend): new function to access the
	gnc:depend guile function.

2000-05-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c: use share balances when
	reconciling stock, mutual fund, and currency accounts.

2000-05-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Account.c (xaccAccountRecomputeBalance): added share,
	cleared share, and reconciled share balance tracking, along with
	api calls for getting them.

	* src/engine/Transaction.c: add calls to get share cleared and
	reconciled balance.

	* src/engine/Query.c: use g_list_prepend and then reverse when
	gathering splits. When pruning the list, prune from the beginning,
	not the end, per the original semantics. Handle the case when
	q->max_splits is 0.

	* src/gnome/dialog-add.c (accWindow): if the window is closed as a
	result of a gnome_dialog_close, don't save the size or destroy the
	window, it's already gone.

	* configure.in: remove check for readline. guile-config should
	return the right values. Also, change LOCALE_DIR definition to
	$datadir/locale. This seems to be more correct.

	* src/swig/perl5/Makefile.in: use -fPIC because it's needed on
	sparcs and doesn't seem to hurt for others.

	* src/gnome/window-register.c (gnc_register_sort): just sort by the
	given key and then by the standard order.

	* src/gnome/window-reconcile.c: add menus to change the sort order
	of the debits and credits list.

	* src/engine/Query.c: allow the sort order to be set as increasing
	or decreasing.

2000-05-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_init): use
	default style's font. Unfortunately, there doesn't seem to be a
	way to get a default italic font, so use the regular one for now.

	* src/gnome/reconcile-list.c: use Queries to get the splits so
	we can do sorting. Add an api call to change the sort order.

	* src/engine/Query.c (xaccAmountMatchPredicate): debits are
	positive, credits are negative.

	* Makefile.in: install files and directories one at a time. If the
	user does not have an install script, the one supplied in the
	gnucash distribution can only handle one file at a time.

	* src/engine/util.c (xaccParseAmount): allow negative sign to be
	at the front or back of the amount.

2000-05-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c: make the finish button sensitivity
	depend on whether the reconciliation is balanced.

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_activate_cursor_cell): if the callback changes the
	value, redraw.

2000-05-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c: allow sorting by reconciled date and
	reconcile status.

	* src/gnome/window-reconcile.c: add a 'statement date' to the
	reconciliation date. This date is used to set all the reconcile
	dates of the splits that get reconciled.

	* src/engine/Transaction.c (xaccSplitSetReconcile): don't change
	the reconcile date when the reconcile status is changed.

2000-05-18  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report-2.scm: Fixed *some* of the
	bugs with two-column balance displays.

2000-05-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c (gnc_recn_create_tool_bar): add a
	'Finish' reconcile button to the toolbar.

	* src/register/splitreg.c (configLabels): use callbacks to get
	debit/credit headings.

	* src/guile/guile-util.c: new functions to access guile
	debit/credit synonyms by account type.

	* src/scm/prefs.scm: added debit/credit synonym configuration.

2000-05-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/guid/guid.h: change the GUID struct to a union with
	an integer to force 32-bit alignment on systems that need it.

	* src/register/splitreg.c (xaccInitSplitRegister): in a currency
	register, set the is_currency flag on the price cell.

	* src/register/pricecell.c (xaccSetPriceCellIsCurrency): function
	to set printing of currency prices in price cells.

	* src/engine/util.c (xaccSPrintAmount): added a PRTCUR flag for
	printing currency prices. Changed flags type from short to unsigned
	int with a typedef of GNCPrintAmountFlags. Changed other files to
	reflect this.

	* src/scm/report/balance-and-pnl.scm: fix html error (fix from
	Martin Schwenke).

	* src/guile/guile-util.c: many bug fixes.

	* src/scm/engine-interface.scm: fix list-ref arg order bug.

	* src/SplitLedger.c (xaccSRCountRows): fix a bug when a two or
	more splits from the same transaction are in the same account. Fix
	other bugs including not accessing deleted splits/transactions.
	Improve the refresh strategy. Could this code get any more
	complicated? Yes...

2000-05-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccSplitRegisterGetCursorTypeRowCol):
	new function, get cursor type by virt row/col.

	* src/scm/report/transaction-report.scm: debits on left, credits
	on right.

	* src/engine/guid/md5.c (md5_process_bytes): fix 32-bit alignment
	bug.

2000-05-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/guile-util.c: added several interface functions to
	src/scm/engine-interface.scm.

	* src/Refresh.c (gnc_account_glist_ui_refresh): added a refresh
	function that takes glib lists. Much more convenient.

	* src/SplitLedger.c: add functionality for transaction
	cut/copy/paste.

	* src/MultiLedger.c (ledgerIsMember): always return true
	for SEARCH_LEDGERS. Simple, but safe.

2000-05-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Makefile.in: add -follow arguments to find commands

	* Makefile.common (CFLAGS): removed hard-coded profiling option

	* configure.in: add a profiling argument.

	* src/guile/gnucash.c: use putenv, not setenv. putenv is POSIX,
	seems to be more common.

2000-05-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* many: removed use of SCM registry in favor of scm_protect_object
	and scm_unprotect_object.

	* src/engine/GNCId.c (xaccRemoveEntity): don't allow the NULL id
	to be removed.

	* src/scm: remove some old, unused files.

	* src/register/splitreg.c (configLayout): swap mirrored xfer from
	and xfer to field in the transaction line of the ledgers.

2000-05-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (gnc_ui_accWindow_create_account): insert
	the account *after* setting the account values so the sort order
	is correct.

	* src/engine/Account.c (xaccAccountInsertSplit): check the currency
	before inserting.

2000-05-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/GNCId.c (xaccGUIDNew): new function to generate
	IDs for gnucash. Use this, not guid_new. Also modified other
	engine files to use this function.

	* src/register/pricecell.c (COLORIZE): check for being close to
	zero before colorizing red.

	* src/scm/main.scm (gnc:main): if no filename was specified, open
	the most recent file in the history.

	* src/gnome/file-history.c (gnc_history_get_last): new function to
	return the last filename the user opened.

2000-05-08  Rob Browning  <rlb@cs.utexas.edu>

	* make-gnucash-patch.in: change gnucash.h to gnucash.c in ignores.
	Delete src/messages_i18n.h from ignores.
	Remove g-wrap files from ignores.

	* src/guile/gnucash.c.in: new file (now auto-generated)
	This and the following change fix a mutual dependency problem.

	* src/guile/gnucash.h: new file (no longer auto-generated).

	* src/Makefile.in (CLEAN_SUBDIRS): add quotes.
	(all targets): build g-wrap before guile. 

	* Makefile.init.in (VERSION): Added to fix problems with rpm spec,
	etc.

2000-05-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c: allow the cell to be blanked directly.

	* src/SplitLedger.c (xaccSRLoadRegEntry): explicitly blank the
	balance cell for the blank split.

	* src/register/splitreg.c (xaccInitSplitRegister): don't blank zeros
	on the balance cell by default.

	* src/gnome/window-main.c (gnc_main_create_menus): rename the
	'Help' menu item to 'Manual'.

2000-05-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/i18n.h.in: always include locale.h

	* src/messages_i18n.h: no longer needs to be configured.

	* configure.in: don't bother checking for locale.h, we have
	to have it anyway.

	* aclocal.m4: always include locale.h

	* src/gnome/window-register.c (deleteCB): use g_strdup_printf
	instead of asprintf.

2000-05-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c: g_list_sort *returns* the new first node.

	* src/engine/Group.c
	(xaccAccountsBeginStagedTransactionTraversals): bug fix -- used wrong
	pointer type.
	(xaccSplitsBeginStagedTransactionTraversals): bug fix -- used wrong
	pointer type.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): print the
	amount using the account's currency.

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_create): remove the
	currency symbol from the dialog and use the account currency, if
	available, in printing amounts.

	* src/gnome/window-adjust.c: remove the currency symbol from the
	dialog and use the account currency in printing amounts.

2000-05-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): set the date entered
	time of the blank split transaction.

	* src/gnome/window-reconcile.c: print different currencies
	correctly. Print reconciled balance so far.

2000-05-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_main_create_toolbar): removed the
	'open file' item from the toolbar, to lessen conflict with the
	'open account' item.

2000-05-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: add a gui option for sorting by
	date entered.

	* src/engine/Query.c: add a BY_DATE_ENTERED sorting option.

	* src/scm/prefs.scm: convert the gui options to internal options.

	* src/scm/options.scm: add an internal option type with no frills.

	* src/engine/util.c (xaccSPrintAmount): add a space after the
	currency code to make the currency symbol.
	(gnc_lconv_set_char): check for the lconv default value using
	CHAR_MAX, not 127.

2000-05-02  Rob Browning  <rlb@cs.utexas.edu>

	* Makefile.in: switch to sed to handle non-makefile generation.

	* Makefile.init.in: kill PATH mangling.
	Add DIFF GUILE and g-wrap command handling.
	
	* configure.in: Many changes related to the great g-wrap exodus
        and the change to handle non-makefile with sed.
	Kill recursive var expansion.
	Kill prefix pre-expansion.
        Remove fancy guile handling - presume newer guile (which is required).
        Remove non-makefiles from AC_OUTPUT (except the locale stuff for now).

	* doc/build-system: Document configure handling of non-makefiles.

	* lib/Makefile.in: expunge g-wrap.

	* make-gnucash-patch.in: use sed @--@ handling for expansions.
	Be strict.
	Add ignore for src/messages_i18n.h

	* po/Makefile.in.in: handle extract-macros.perl.in vars with sed.

	* po/extract-macros.perl.in: handle vars with sed.

	* rpm/Makefile.in: new file.  Handle gnucash.spec.in with sed.

	* rpm/gnucash.spec.in: use @--@ vars.

	* src/Makefile.in: handle src/quotes in the build process.
	Re-order src/guile to build before src/g-wrap.
	
	* src/g-wrap/Makefile.in: handle new version of g-wrap.

	* src/gnome/Makefile.in: fix compile var handling for g-wrap, etc.

	* src/guile/Makefile.in: fix compile var handling for g-wrap, etc.
	Add sed handling for gnucash.h.in.

	* src/guile/gnucash.h.in: handle g-wrap changes.
	Handle removal of EXPANDED vars.
	Switch to sed @--@ vars.

	* src/qt/Makefile.in: fix compile var handling for g-wrap, etc.

	* src/quotes/Makefile.in: new file.
	Handle gnc-prices.in with sed.

	* src/quotes/gnc-prices.in: Switch to sed @--@ vars.

	* src/scm/Makefile.in: Handle bootstrap.scm.in with sed.

	* src/scm/bootstrap.scm.in: Switch to sed @--@ vars.

2000-05-02  Robert Graham Merkel  <rgmerk@mira.net>

	* man/gnc-prices.1: fixed typo.

	* src/scm/report/transaction-report-2.scm: fixed typo for debit string
	and reversed displayed sign in debit column.

2000-05-01  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report-2.scm : Added i18n and
	optional two-columns printout to the new transaction report.

2000-04-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Queue.c (xaccQueueGetShares): computation should start
	at the tail split, not at split 0.
	(xaccQueueGetValue): ditto.

	* src/scm/report/average-balance.scm: track stock account balances,
	i.e. value, not cost.

2000-04-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c: add a flag determining whether to use
	regular labels or only debit/credit.

	* src/gnome/top-level.c: implement the debit/credit label option

	* src/scm/prefs.scm: added option to only use debit/credit labels
	in the register.

	* src/MultiLedger.h: remove the MAX_SPLITS constants

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): no need to
	reverse quantities.

	* src/gnome/top-level.c (gnc_configure_reverse_balance): take out
	debit sign-reversal type.

	* src/scm/prefs.scm: take out debit sign-reversal type

	* src/SplitLedger.c: debit/credit reversal.

	* src/register/pricecell.c: debit/credit reversal.

	* src/register/splitreg.c: switch the column labels for the
	debit/credit reversal.

	* src/gnome/window-reconcile.c: fix up the dialog for the
	debit/credit reversal. Also, fix the calculations so the user
	can change sign-reversal modes while the dialog is open.

	* src/gnome/window-main.c (gnc_ui_delete_account): refresh the
	main window fully.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): debits are
	positive, credits are negative.

2000-04-28  Robert Graham Merkel  <rgmerk@mira.net>

 	* src/scm/html-generator.scm (html-table-do-entry): Bryan Larsen's
	fix for null (#f) generators.

2000-04-28  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/option-util.c: redid the option database storage as
	a hash table, so databases have the same handle throughout their
	lifetime.

	* src/engine/Transaction.c (xaccTransOrder): only compare nums if
	they are non-blank.

2000-04-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): use ASSET
	type to determine sign reversal for assets quantity.

2000-04-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/guid/guid.c (guid_init): add hostname and domainname
 	to the mix.

	* src/engine/AccInfo.c (xaccAccountTypesCompatible): relax the
 	restrictions on account types. Go to three groups: asset &
 	liability, income & expense, equity.

	* src/engine/FileIO.c: no need to free NULL pointers.

2000-04-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/average-balance.scm: the min and max columns
	were swapped. Also, the last average balance entry wasn't being
	calculated correctly.

	* src/gnome/dialog-options.c: modified to use gnc-dateedit.

	* src/gnome/window-adjust.c: modified to use gnc-dateedit.

	* src/gnome/window-register.c: modified to use gnc-dateedit.

	* src/gnome/dialog-transfer.c: modified to use gnc-dateedit.

	* src/gnome/gnc-dateedit.c: new file. gnome date editor modified
 	to use gnucash date printing and parsing routines. I plan on
 	extending this with additional features, too.

	* src/engine/Group.c (xaccMallocAccountGroup): loop until we
	get a unique id. This is just paranoia code. Ditto for Account.c
	and Transaction.c.

	* src/engine/Account.c: add some 'const' keywords to string
	arguments. This affected many other files.

	* src/engine/Scrub.c: i18n strings used to make new accounts.

2000-04-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-options.c: use the default section, if present,
	when building the dialog.

	* src/scm/options.scm: option databases can have default sections.

	* src/scm/report/transaction-report-2.scm: make the default option
	section "Report Options". Change "x Display" section to "Display".
	Add title of report to string database.

2000-04-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/average-balance.scm: comment out query function.
	This needs to be fixed when the new query api gets g-wrapped.

	* src/engine/Query.c: (xaccFreeQuery): free the split list
	(xaccQueryGetSplits) handle a null account group

	* src/gnome/dialog-edit.c: figure out all the accounts affected
	by a currency/security/type change and ask the user whether the
	needed changes should be made.

	* src/gnome/dialog-utils.c (gnc_fill_menu_with_data): also recurse
	for GNOME_APP_UI_SUBTREE_STOCK.

	* src/gnome/top-level.c (gnc_configure_reverse_balance): change
	asset-expense to all debit accounts.

	* src/register/numcell.c: include <limits.h> per Eric Hanchrow's
	fix.

2000-04-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/g-wrap/gnc.gwp: wrap functions for getting account guids and
	looking up accounts by guids.

	* src/g-wrap/gnc-helpers.c: add helper functions for using guids.

	* src/scm/prefs.scm: add an assets-expense choice to which kinds of
	accounts are sign-reversed.

	* src/gnome/top-level.c (gnc_configure_reverse_balance): handle the
	asset-expense choice.

2000-04-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	added a missing 'break' statement.

2000-04-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/AccInfo.c: allow the price source to be set to NULL.

	* lots of build system files: changes for the global id stuff.

	* src/engine/GNCId.c: engine globally unique id api implementation.

	* src/engine/guid/md5.c: taken from GNU textutils.

	* src/engine/guid/guid.c: new file with routines for generating
	globally unique ids.

2000-04-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* doc/README: only the environment variable LANG needs to
	be set to change the locale.

2000-04-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/srfi/srfi-1.r5rs.scm: renamed 'list-index' to
 	'list-index-pred'. guile-1.3.4 defines a list-index with
	different api and semantics.

	* configure.in: make gnucash.spec configured

	* rpm/gnucash.spec.in: new file, same as old gnucash.spec, but
	with @VERSION@ instead of a hard-coded version number. Removed
	gnucash.spec.

	* src/scm/prefs.scm: make the default field types be description
 	and total

	* src/gnome/window-main.c (gnc_configure_account_tree): set the
	state of the total field

	* src/gnome/account-tree.c: add in the new total field

	* src/gnome/dialog-utils.c: add the new account field key
 	ACCOUNT_TOTAL. This key refers to the account's balance plus the
 	balances of all children. The ACCOUNT_BALANCE key now refers to
 	the balance of the account itself, without children.

2000-04-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/balance-and-pnl.scm: remove the report description.
	It just looked weird!

	* src/scm/command-line.scm (gnc:prefs-show-version): use the
	configured version instead of hard-coding it.

	* src/scm/bootstrap.scm.in (gnc:version): configure this guile
	variable with the gnucash version info.

	* src/SplitLedger.c (xaccLoadXferCell): == not = Doh!!!

2000-04-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c (PROLOG): move declaration of da and db
	locals into the macros that actually use them. This gets rid
	of some annoying warnings.

	* src/register/numcell.c: added method to set the last number
 	entered.  The next number entered is now the last number + 1.

	* Makefile.in: changed [ -e filename ] to [ -f filename ]

	* src/scm/report.scm: Changed the report format to be a record.

2000-04-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* configure.in: removed check for eperl

	* src/reports: removed pathconfig.h.in and Sheet.? (eperl stuff)

	* src/gnome/window-help.c: took out gncReport call (eperl)

	* lib/Makefile.in: took out make dist hack

	* src/register/table-allgui.c: more error checking

	* src/SplitLedger.c: more cleanup. Fix a bug in refreshing a register
	in auto-mode where the current transaction has been deleted.

	* src/scm/report/balance-and-pnl.scm: put sub-accounts below their
	parent accounts and indent their names. Align the columns better.
	Print fully-qualified names.

2000-04-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-style.c: update the styles
 	appropriately for the changes below.

	* src/register/splitreg.c: configure the ledger style register
	with a xfer to field in all modes.

	* src/SplitLedger.c (xaccSRLoadRegister): remove stock price hack.
	many code cleanups throughout file.

2000-04-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: changed menu definitions to be
	statically allocated.
	* src/gnome/window-main.c: ditto

	* src/SplitLedger.c: added extra checks for boundary conditions.
	When refreshing, try to go to the same cell offset as before.

2000-04-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c: more generalizations needed for general
 	ledger operation.

	* src/register/splitreg.c (configLayout): add the xto cell into
	the transaction cursor.

2000-03-31  Rob Browning  <rlb@cs.utexas.edu>

 	* src/scm/Makefile.in: set top_srcdir and include Makefile.init

 	* src/reports/pathconfig.h.in: use new GNC_EXPANDED_ vars.

 	* src/quotes/gnc-prices.in: new file.

 	* src/quotes/gnc-prices: deleted.

 	* src/guile/gnucash.h.in: use new GNC_EXPANDED_ vars.

 	* src/guile/i18n.h.in: use new GNC_EXPANDED_ vars.

 	* src/guile/Makefile.in (top_srcdir): set.

 	* src/Makefile.in: minor cleanups and safety code.

 	* make-gnucash-patch.in: new file.

 	* make-gnucash-patch: deleted.

 	* lib/Makefile.in: re-configure g-wrap after every distclean and
 	rebuild/install it on every build.

 	* gnucash: fix the doc-path to match the new structure.  This
 	fixes things back the way they were, but now we need to add
 	runtime locale detection.

 	* doc/build-system: new file - should eventually cover
 	build-system info and justifications.

 	* configure.in: changes to accommodate the new GNC_EXPANDED_*
 	vars.  See doc/build-system for a summary.

 	* Makefile.init.in (ABSOLUTE_TOP_SRCDIR): set
 	(top_srcdir): don't set (it has to be set in each separate Makefile.in)

 	* Makefile.config.finish: deleted.

 	* Makefile.in: minor cleanup -- some safety checks.

 	* Makefile.common: Clear all the .SUFFIXES rules.  They were
 	causing weird behaviors when I was trying to create some new
 	implicit rules.

 	* src/scm/printing/number-to-words.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/printing/print-check.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-dialog-utils.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-file.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-guess-map.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-import.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-objects.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-parse.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-to-gnc.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-utils.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/simple-obj.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/main.scm: fix load-path problems.

2000-03-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (gnc_transaction_delete_query): ok, we
	can't destroy the dialog on close, because we need the widgets to be
	there afterwards. gtk_widget_destroy() the dialog instead.

	* src/register/splitreg.c: add a SEARCH_LEDGER register type. Don't
	include the balance field in 'ledger' style registers.

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	new layouts for ledgers -- they don't have a balance field. We'll
 	probably need to redo them if we add a xto field. Broke out the
	actual layout construction into separate functions.

2000-03-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): remove the 'special
 	case' for setting the price. It is no longer needed.

	* src/gnome/window-register.c (gnc_reg_set_window_name): set the
 	name regardless of whether there is a leader.

	* src/SplitLedger.c (xaccSRLoadRegister): fixed a possible memory
 	leak in destroying the buffer

2000-03-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/transaction-report.scm: bug fixes and speed
 	improvements

	* src/engine/Group.c: added some new transaction traversal code

	* src/scm/report/folio.scm: implement the old eperl report

2000-03-28  Robert Graham Merkel  <rgmerk@mira.net>

 	* man/gnc-prices.1: new file.  Man page for gnc-prices. Somebody
 	please add installation from makefile!

2000-03-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/budget-report.scm: removed use of transaction
 	report function. This was generating a value that was not
 	subsequently used.

2000-03-26  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/transaction-report.scm: i18n the report

	* src/gnome/window-register.c (gnc_transaction_delete_query):
 	destroy on close, don't hide.

	* src/register/splitreg.c: several new functions for saving and
	restore the contents of the cursor.

	* src/SplitLedger.c (xaccSRRedrawRegEntry): always redraw, caller
 	knows best!
	(LedgerMoveCursor): if we are leaving the pending transaction,
 	commit it.
	(xaccSRLoadRegister): save and restore changed cursor values.
	(xaccSRSaveRegEntry): clear the register change flags.

2000-03-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/quickfillcell-gnome.c (QuickFillDirect): if
 	the cursor is in the selection, move it to the start of the
 	selection.

	* Makefile.common: add the value of DEFS to the compile flags

	* Makefile.init.in: get the value for DEFS.

	* src/register/numcell.c: new cell for entering numbers. Handles
	accelerators for increasing/decreasing the number and remembers
	the largest number for auto-filling.

2000-03-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/average-balance.scm: fixed many things and i18n'd
	the report.

	* src/engine/util.c (PrintAmt): always use '.' as the decimal point
	coming from sprintf.

2000-03-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/prefs.scm: set the default currency code using the
	wrapped C function in util.c below.

	* src/engine/util.c (xaccSPrintAmount): add a PRTNMN flag for
 	printing non-monetary values.
	(gnc_locale_default_currency): return the currency code for the
 	current locale.

	* src/register/splitreg.c (xaccInitSplitRegister): update for
 	changes to the price cell api.

	* src/engine/util.c (xaccSPrintAmount): set the precision based on
 	the locale.

	* src/register/pricecell.c: remove some unneeded api calls and
	add one for specifying that the cell contains a share quantity.

2000-03-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-options.c (gnc_option_set_ui_widget): request
	a reasonable size for the number-range widget.

	* src/FileDialog.c (gncFileQuerySave): return a boolean value
 	indicating whether the user wants to proceed or cancel. The uses
 	of this function have been updated to respond appropriately.

2000-03-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c (xaccInitQuery): make the standard engine
 	order the default sort order.

	* src/gnome/window-adjust.c (adjBRefresh): update the title

	* src/Refresh.c (gnc_account_ui_refresh): refresh the edit account
	and adjust balance windows too.

	* src/gnome/dialog-edit.c: add gui for changed the account type.

	* src/engine/Account.c (xaccAccountSetType): allow account types
 	to be changed.

2000-03-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/extensions.scm (gnc:new-menu-namer): register and
 	translate the names correctly.

	* src/scm/report.scm (gnc:report-menu-setup win): make sure the
 	report title gets registered and translated.

	* src/scm/report/hello-world.scm: i18n'd this report.

2000-03-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_register_key_press_cb): generate activate event on a
 	keypad enter as well as the return key.

	* Docs/C/xacc-ticker.html: updated for Yahoo Europe information.

2000-03-13  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-utils.c: added Yahoo Europe to the quote source
 	menu.

	* src/quotes/Quote.pm: added method for getting Yahoo European
 	quotes. Also, fixed the parsing of csv data.

	* src/quotes/gnc-prices: cleanup the code, less wordy output.

	* src/quotes/Quote.pm (yahoo): updates from latest YahooQuote.pm

2000-03-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/c-interface.scm (gnc:error->string tag args): print a
 	stack backtrace.

	* src/gnome/cursors.c: when given a NULL argument, the set and
	unset busy cursor function change all top-level window cursors.
	This breaks the motif side though, in that the cursor will no
	longer get set there. Oh well.

	* src/gnome/window-register.c (duplicateCB): new callback for
 	duplicating the current transaction/split.

	* src/SplitLedger.c (xaccSRDuplicateCurrent): new function to
 	duplicate the current split or transaction.

	* src/gnome/window-report.c (gnc_run_report): set the busy cursor
	while running the report generator.

2000-03-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): revise the
 	profit and asset calculation.

	* src/MultiLedger.c (xaccLedgerDisplayRefresh): don't reverse the
 	balances ever -- let the GUI do it.

	* src/motif/RegWindow.c (regRefresh): reverse the balances
	for INCOME and expense.

2000-03-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regRefresh): print
 	reversed-balanced account balances appropriately.

2000-03-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/transaction-report.scm: a few bug fixes.

	* src/gnome/window-main.c (gnc_ui_delete_account): destroy the
 	windows *then* remove the account from the tree. Sometimes,
 	destroying the window can result in a refresh, which will do
 	strange things if we have already removed the account from the
 	tree.

2000-03-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c (recnRefresh): resize the window

	* src/FileDialog.c (gncPostFileOpen): set the busy cursor while
 	reading the file.
	(gncFileSave): ditto.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_update_adjustments): set the step increment.

2000-03-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_set_col_width): Adjust the overall style
 	width, too.

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_auto_resize_column): Resize the window to fit the
 	register.
	(gnucash_header_event): ditto on a column resize.

2000-03-05  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/report/transaction-report.scm: add support for depend
	mechanism.

	* src/scm/report/hello-world.scm: add support for depend
	mechanism.

	* src/scm/report/folio.scm: add support for depend mechanism.

	* src/scm/report/balance-and-pnl.scm: add support for depend
	mechanism.

	* src/scm/report/average-balance.scm: add support for depend
	mechanism.

	* src/scm/report.scm (gnc:report-menu-setup): fixed minor
	non-r5rsism (defines must be at the beginning of a <body>).

	* src/scm/report/report-list.scm: new file.  This is where all of
	the reports that should be loaded at startup should be listed.

	* src/scm/main.scm (gnc:startup): don't autoscan/load from the
	report dir anymore.  Use the depend mechanism instead.  This isn't
	as convenient, but it's safer.

	* src/scm/hooks.scm (gnc:hook-run-danglers): added a little
	debugging code.

	* src/scm/extensions.scm (gnc:extensions-menu-setup): fixed minor
	non-r5rsism (nested defines must be at the beginning of a <body>).

	* make-gnucash-patch: allow the user to override the default
	locations with environment variables.

2000-03-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/gnucash.c (main): load the locale from the environment
 	with setlocale. This is needed so that guile can find the locale.

	* Docs/: reorganized the Docs directory. Then english language
 	stuff moved to the "C" directory. The french stuff goes under
 	"fr". The "En" and "Fr" directories are gone. The standard for
 	country codes uses lower-cases letters, so we should stick to
 	that. The graphics files go under "pix" directories under their
 	respective language directories.

	* src/scm/path.scm: create documentation search paths based on the
 	current locale. The default "C" locale is always searched last.

	* src/reports/File.c (gncFindFile): take out dead code.

2000-03-04  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (set_dimensions_pass_one):
 	Only set the dimensions based on percentages if the dimensions
 	have not been set before.  This gets rid of some strange behavior
 	where styles change width by a few pixels when window size was
 	changed.
	(gnucash_sheet_style_set_dimensions): Add a width argument; now we
 	compute dimensions to fit "width" as best as possible.  Most of
 	the time width should be the allocation width of the sheet, except
 	that when the style is first compiled, the allocation width may be
 	unavailable.
	(style_recompute_layout_dimensions): Set dimensions->width
 	properly.
	(gnucash_style_default_width): Nuke this function, since we can
 	now use dimensions->width.
	(gnucash_sheet_style_compile): Use a default width to set
 	dimensions.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_set_top_row):
 	Update the canvas before the scroll.  This helps eliminate some of
 	the flashing when the register scrolls.  Still not perfect,
 	though.

2000-03-03  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_size_allocate): Keep track of the allocation and
 	update everything only if the allocation changes.  This is needed
 	because gnome canvas widget items always do a gtk_widget_set_usize
 	(), which in turn forces a reconfigure of the parent widgets.  So
 	we were getting size_allocate events even when the size of the
 	window was not changing.
	(gnucash_sheet_set_top_row): Scroll the sheet by setting the
 	adjustment values rather than calling gnome_canvas_scroll_to ().

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): Set the sheet width from the header.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_block_set_from_table): Check to see if the style
 	has changed before we reallocate all the entries and colors.
	(gnucash_sheet_block_set_entries): Don't strdup the entries from
 	the table.
	(gnucash_sheet_block_clear_entries): Don't free the text in the
 	entries, since now the table owns this.
	(gnucash_sheet_set_scroll_region): New function; sets the scroll
 	region on the register canvas.
	(gnucash_sheet_update_adjustments): This was being done
 	incorrectly.  The layout widget on which the gnome canvas is based
 	takes care of the adjustments, and we've just connected to these
 	adjustments in the smooth-scroll case.  Now that the scroll region
 	is set correctly, just let the layout manage the adjustments.
	

2000-03-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c (PriceMV): accept thousands separators.

	* src/scm/c-interface.scm: new functionality for registering
 	translatable strings and saving them to a file in a suitable
 	format for po creation. This touched a bunch of other .scm
	files as well.

2000-03-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-options.c: use gettext to translate the strings
	used to make the gui components.

	* src/gnome/window-reconcile.c
 	(gnc_reconcile_window_create_list_frame): always show vertical
 	scrollbars, the columns widths work out better that way.

	* src/gnome/reconcile-list.c
 	(gnc_reconcile_list_get_needed_height): better estimate of needed
 	height than just multiplying row height times rows.

	* src/register/gnome/gnucash-item-list.c (gnc_item_list_autosize):
 	new function to autosize the list. For some reason, have the list
 	autosize for each new insertion wasn't working for very large
 	registers.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): bump up
 	the scroll region for very large registers.

	* src/gnome/window-main.c (gnc_main_create_toolbar): removed the
 	C-a and C-d shortcuts for adding and deleting accounts.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_init): print
 	selected 'y' reconcile flags in yellow for better contrast.
	(gnc_reconcile_list_unselect_row): don't unselect the row if we
 	are toggling the current row.

	* src/gnome/window-reconcile.c (recnRecalculateBalance): reverse the
	balance if appropriate.

2000-03-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-adjust.c (gnc_ui_AdjBWindow_ok_cb): reverse the
 	balance if appropriate.

	* src/scm/extensions.scm: add the extensions menu if  debugging.

	* src/scm/bootstrap.scm: new function to check debugging status.

	* src/FileDialog.c (gncFileQIFImport): set the busy cursor when
	reading and processing the qif.

	* src/SplitLedger.c: added a sign-reversal callback.

	* src/gnome/dialog-utils.c (gnc_ui_get_account_full_balance): used
 	the sign-reversal option in computation.

	* src/gnome/top-level.c: implement the sign-reversal configuration
	and callbacks.

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): used
 	sign-reversal option in computation.

	* src/scm/prefs.scm: add an option to choose how accounts
	are sign-reversed.

2000-02-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/cursors.c (gnc_ui_set_cursor): let the gtk main loop
 	catch up before we exit. This makes sure the cursor gets changed
	before we return.

	* src/gnome/dialog-filebox.c: hide the window before exiting
	the gtk main loop.

	* src/scm/prefs.scm: added a new option for expanding parent
	accounts with double-clicks instead of opening them.

	* src/gnome/window-main.c (gnc_account_tree_activate_cb): use
 	expansion option to decide whether to open or expand.

	* src/SplitLedger.c: check for common currency when saving a
 	register entry. If there is none, don't perform the split
 	insertion; instead show a warning dialog.

	* src/scm/prefs.scm: converted account type and account field
 	options to list options.

	* src/register/gnome/combocell-gnome.c (leaveCombo): if a new
 	value is returned, also set the same value as the cell value.

	* Makefile.in: added 'unfinished' to qt compile target info.

2000-02-28  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/options.scm: added a list option

	* src/scm/report/hello-world.scm: added a demo list option

	* src/gnome/dialog-options.c: added implementation of list options.

	* src/engine/QIFIO.c (xaccParseQIFDate): fix for 4-digit dates.
	(xaccParseQIFDate): fix for x/x' 00 dates, which are an old
	format for 2000 dates.

	* src/scm/report/average-balance.scm: fix report to work when
 	there are no accounts.

	* src/scm/report/transaction-report.scm: initialize the inflow and
 	outflow variables to zero each time the report is run.

2000-02-27  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/gnome/top-level.c (gnc_configure_register_borders): Add
 	options for setting cell borders.

	* src/scm/prefs.scm: ditto

	* src/register/gnome/gnucash-style.c
 	(gnucash_style_set_cell_borders):
	(gnucash_style_set_register_borders):
	(gnucash_style_set_borders):
	(gnucash_sheet_set_borders): Functions to interactively set cell
 	borders.

2000-02-26  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_compile): Support for turning horizontal and
 	vertical borders on and off.
	(gnucash_sheet_style_recompile): Ditto

	* src/register/gnome/gnucash-grid.c (draw_cell): ditto

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): Fix a bug in how the scroll region
 	was set.  Remove some outdated code.

2000-02-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_create): use
 	gnc_localeconv to get the currency symbol.

	* src/gnome/window-adjust.c (adjBWindow): put colons after label.
  	Use gnc_localeconv to get the currency symbol.

2000-02-26  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-adjust.c (gnc_adjust_update_cb): only update if
 	the new string is different from the old. ditto for the reconcile
	and transfer windows.

2000-02-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c (PriceHelp): print out full number for
 	help value.

	* src/register/table-allgui.c (makePassive): implement alternative
 	passive colors.

	* src/register/splitreg.h (struct _SplitRegisterColors): add color
 	for odd rows in single mode, and boolean argument determining
 	whether to alternate virtual or physical rows in double mode.

2000-02-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_check_grab):
 	see if we need to release the grab.

	* src/register/splitreg.c (xaccInitSplitRegister): configure the
	mxfer cell with an ignore string (SPLIT_STR) and a help string
	explaining multi-line transactions.

	* src/register/gnome/combocell-gnome.c: added help handler and
 	ignore string functions.

	* src/register/table-allgui.c (gnc_table_enter_update): don't set
 	changed flag if new string is identical.

2000-02-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/table-gnome.c (xaccRefreshTableGUI): redo the style
 	information so that new colors (and other info) get refreshed.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw): use
 	header style color to draw header background.

	* src/gnome/option-util.c: new functions to support color options.

	* src/gnome/dialog-options.c: gui implementation of color options.

	* src/scm/report/hello-world.scm: used the new color option.

	* src/scm/options.scm: added a new color option.

2000-02-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/extensions.scm (gnc:new-menu-namer): new object that
 	automatically picks accelerator keys for a group of menu items.

2000-02-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_delete_cb):
 	don't bother with the callback if the ending position of the
 	deleted section is <= to the starting position. This can happen.

	* include/messages_i18n.h.in: added menu item strings with
	underscore accelerators. Changed several gnome files to use
	these strings.

2000-02-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): scroll region width should be the
 	style width, not the allocation width.

2000-02-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/gfec.c (gfec_catcher): use a guile function for
 	printing the error instead of the C interfaces. This removes
	a dependency on guile 1.3.4.

	* src/scm/c-interface.scm: add function for return an error string.
	Used by the C-side error catcher in gfec.c.

2000-02-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/hello-world.scm: added a 'crash the report'
 	option for testing the reports code.

	* src/register/gnome/gnucash-header.c (gnucash_header_event):
 	modify per changes to pointer_on_resize_line. Allow the user to
 	resize by double-clicking anywhere in a column heading.
	(pointer_on_resize_line): set the column with a pointer argument.
  	return true if on a resize line, false otherwise.
	(gnucash_header_init): initialize normal_cursor to NULL, which
	selects the default gdk cursor.

2000-02-18  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	Make only the description cell a FILL cell.

2000-02-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c (gnc_localeconv): Diane Trout's patch to set
	the default values with a function.

	* src/register/datecell.c (DateMV): validate change values longer
 	than a single character. Also, update the date value after a
 	non-accelerator change.

	* src/register/pricecell.c (PriceMV): validate change values
 	longer than a single character.

	* src/engine/util.c (gnc_localeconv): add in default values for
	the sign and currency positions if their values are out of range.

	* src/gnome/window-reconcile.c (recnRecalculateBalance): colorize
	the negative values in the summary frame.

2000-02-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (gnc_register_create_menu_bar):
 	added an edit menu with cut/copy/paste.
	(gnc_register_create_menu_bar): use 'blank' instead of 'new' to
 	describe the command to jump to the blank split. Use a new tooltip
 	too. Ditto for the popup menu and the toolbar.

	* Makefile.in: reversed order of gnucash linking so gnucash.gnome
	gets linked last, so it overrides the motif version. Also, install
	the gnucash.desktop entry so gnucash appears in the gnome panel.

	* src/register/splitreg.c: right-align the xfer cells

	* src/register/gnome/gnucash-item-edit.c: handle selections the
 	gtk way with the gtk_selection_ routines. Grabbed this stuff from
 	gtkeditable and gtkentry.

	* src/register/gnome/gnucash-sheet.c: use the new selection handling
	code in the item editor to do cutting and pasting.

2000-02-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-item-edit.c: added code to support
	real gtk selection handling. Adapted this from the gtk editable
	widget.

2000-02-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_create): allow the
 	user to resize the window

	* src/gnome/window-register.c: save and restore window size

	* src/gnome/window-main.c: save and restore window size

	* src/gnome/dialog-edit.c: save and restore window size

2000-02-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (accWindow): save and restore window size

	* many files: use the configured account separator

	* src/gnome/dialog-utils.c (gnc_get_account_separator): new function
	to get the account separator

	* src/scm/prefs.scm: new option for the account separator

2000-02-13  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (configLayout): swap the xfer and desc
	cells. Add the debit and credit cells to the transaction cursor
	so we get totals.

	* src/register/quickfillcell.h: add a GUI-specific initializer.
	The motif version does nothing. The gnome version add a direct
	callback to handle auto-completion keystrokes.

	* src/register/table-allgui.c (gnc_table_direct_update): new
 	function for passing direct gui input to the table, and then the
 	cells.

	* src/register/basiccell.h: added a direct_update callback for
 	responding to raw gui input.

	* src/register/gnome/combocell-gnome.c (ComboDirect): add complete
 	to char and complete as far as possible functionality.

2000-02-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: add new account menu item

	* src/engine/Transaction.c (xaccTransCommitEdit): always check the
	split ordering on a commit. Only checking the transaction date won't
	work, because other fields in the transaction and the split affect
	the order.

	* src/engine/Account.c (xaccCheckDateOrder): use
 	xaccSplitDateOrder, the same routine as xaccAccountInsertSplit to
 	do the ordering.

	* src/register/table-allgui.c (gnc_table_modify_update): new
 	function, a direct gui callback.

2000-02-11  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm
 	((gnc:tr-report-get-first-acc-name split-scm)): Fixed crash when
 	it's a lone split, and somebody's not using proper double-entry
 	accounting!

	* Doc: Extensive clean-up and documentation of new features,
 	including several new images.

2000-02-11  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): change memo
 	cell to be a quickfill cell.

	* src/gnome/window-main.c (gnc_refresh_main_window): refresh all
	account trees.
	(gnc_ui_delete_account): remove account from all trees.

	* src/gnome/account-tree.c: added a global list of account trees.
  	added functions for refreshing all trees and deleting an account
 	from all trees.

	* src/register/basiccell.h: (and lots more files) added a cell
 	callback for getting the 'help' string of a cell. This uses a
	default which uses the value of the cell, if its not blank, and
	a "blank help" otherwise. The blank help string can be set on a
	per-cell basis.

	The date cell replaces the help callback with one that prints the
	date out in full, according to the current locale.

	The split register initialization sets a few of the cells with
	blank help values.

	Finally, the gnome register uses the help strings to set the
	status of the statusbar.

2000-02-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c (loglevel): print warnings and errors in
	all modules.

	* src/gnome/window-main.c: change the sensitivity of menu and
 	toolbar items that need a selected account.

	* src/gnome/dialog-edit.c (editAccWindow): allow dialog to be
 	resized

	* src/scm/extensions.scm: add code for a more flexible menu
 	definition process under guile. Comment out extensions menu
	stuff -- it's not complete.

	* src/register/gnome/gnucash-sheet.c (gnucash_button_press_event):
 	after moving, get the cursor position again before setting the
 	item editor cursor position because the cursor position may have
 	changed due to auto-mode rearrangement.

	* src/scm/prefs.scm:comment out locale-based date parsing

	* src/gnome/window-main.c (gnc_main_create_menus): modify the
 	names and order of the items per gnome standards.

	* src/scm/options.scm: Only save options that have been changed
	from their default values.

	* include/messages_i18n.h.in: removed periods from end of tooltips
	(gnome standard).

2000-02-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c (recnFinishCB): rewrote to be more
 	like the other top-level windows.

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog): have the amount
 	entry grab focus.

2000-02-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/options.scm: add a number-range option

	* src/scm/prefs.scm: add an option of number of register rows.

	* src/gnome/option-util.c: add utility functions for number
	range options.

	* src/gnome/dialog-options.c: implement number range options

	* src/scm/prefs.scm: added a register 'show all transactions'
 	option.

	* src/gnome/window-register.c (gnc_register_date_window): lookup
	guile 'show all' option to determine how to set the date range.

	* src/register/splitreg.c (xaccInitSplitRegister): Set the minimum
 	trailing zeros for share quantities to 0. All price cells are now
 	monetary values.

	* src/register/pricecell.c: modify to use integer arg for trailing
 	zeros. Add function for changing blank_zero option.

	* src/engine/util.c (PrintAmt): change the trailing zeros argument
	to an integer indicating the minimum number of trailing zeros to
	print.

	* src/register/gnome/gnucash-item-list.c: handle mouse wheel
 	scrolling from the clist.

2000-02-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): set the
 	color of deficit values to red in the main window status bar.

	* src/gnome/account-tree.c (gnc_account_tree_insert_row): only set
 	values as red if they are less than but not extremely close to
 	zero.

	* src/gnome/window-main.c (mainWindow): separate profit and asset
	labels in the status bar.

2000-02-07  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/global-options.c (gnc_options_dialog_help_cb): pops
	up a help window.

	* src/gnome/dialog-edit.c (gnc_ui_EditAccWindow_help_cb): callback
	now displays help page instead of placeholder dialog.

	* Docs/En/xacc-accountedit.html: New file explaining account edit
	dialog.

	* Docs/En/xacc-globalprefs.html: New file explaining preferences.

	* Docs/En/xacc-main.html: Added pointers to new help pages for
	account-edit and preferences dialog boxes.

	* src/top-level.h: Added new HH_* macros for new help pages for
	dialog boxes

2000-02-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): don't refresh if the
	transfer account hasn't really changed.

	* src/gnome/window-adjust.c (gnc_ui_AdjBWindow_ok_cb): parse
 	amount with xaccParseAmount.  When the amount entry goes out of
 	focus, reformat the value with separators.

	* src/gnome/dialog-transfer.c: parse amount with xaccParseAmount.
	When the amount entry goes out of focus, reformat the value with
	separators.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): print the
 	amount with xaccPrintAmount, with separators.

	* src/gnome/window-reconcile.c (startRecnWindow): print the amount
 	with separators and parse it with xaccParseAmount. When the amount
 	entry goes out of focus, parse it and reformat it.

	* src/register/splitreg.c (xaccInitSplitRegister): set the stock
 	register cell options appropriately.

	* src/register/pricecell.c: add functions for setting the precision
	and trailing zeros option. removed the 'shares' option.

	* src/engine/util.c (xaccSPrintAmountGeneral): add a generalized
 	amount printing function.

	* src/gnome/window-register.c (gnc_register_date_window): add a
 	button to the date range window for setting the date range when
 	the user changes a date without 'enter' or 'double-click'.

	* src/engine/Account.c (xaccAccountGetFullName): moved this function
	from gnome to here to make it gui independent. Returns a malloc'd
	string with the fully-qualified name of the account using the given
	separator char.

2000-02-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_auto_resize_column): Support for auto sizing.
	(gnucash_header_event): Double clicks on the resize lines will
 	auto resize the column to fit the text.

	* src/register/gnome/gnucash-sheet.c (compute_optimal_width): Use
 	the style layout to compute a good width for the sheet.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw): Draw
 	the big rectangle correctly.
	(gnucash_header_reconfigure): Set the scroll region and header
 	width based on the size of the sheet, not the current style.

2000-02-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): flag the share
 	quantities as such.
	(xaccInitSplitRegister): initialize the physical column to 0.

	* src/register/pricecell.c: get rid of the format string, add an
 	option for printing share quantities.

	* src/engine/Session.c (MakeHomeDir): just because ~/.gnucash
 	exists doesn't mean ~/.gnucash/data exists.

	* src/scm/report/hello-world.scm: renamed from dummy.scm. Added
	documentation to the source code and additional help text in the
	report. This is intended to be an example for how to write reports.

	* src/gnome/window-report.c (reportAnchorCB): use gnome_url_show
	to display the anchors.

	* src/gnome/window-help.c (helpAnchorCB): use gnome_url_show to
	display the other anchor types.

	* src/gnome/dialog-utils.c: removed tooltip setting function. I was
	using tooltips the wrong way. Instead of having one tooltips object
	for each tip, you use one tooltips object for each logical group of
	tips, i.e., all the tips on a dialog. Also, changed the dialogs to
	use this method.

	* src/gnome/dialog-transfer.c: use labels with colons.

2000-02-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/extensions.scm: removed cruft functions

	* src/register/gnome/gnucash-item-list.c (gnc_item_list_select):
 	set the focus row to the selected row.

	* src/register/gnome/combocell-gnome.c (ComboMV): auto-pop the
 	list on input, according to the option value below.

	* src/scm/prefs.scm: added option to auto-raise register list on
 	input.

2000-02-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/combocell-gnome.c (enterCombo): sort the list
 	before popping up.

	* src/engine/Query.c: do num sorting using numerical values where
 	possible.

	* src/register/gnome/gnucash-item-edit.c: added new functions for
	cutting, copying, and pasting the clipboard. We have to do this
	manually instead of relying in the gtk_entry, as it screws up the
	selection handling.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_insert_cb):
 	fixed bug where new text was being copied incorrectly for
 	insertions longer than a character.

2000-02-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (compute_optimal_width):
 	return optimal width if possible

	* src/register/gnome/gnucash-style.c
 	(gnucash_style_default_width): new function, compute optimal sheet
 	width

	* src/gnome/option-util.c: interfaced with the guile option callback
	mechanism.

	* Changed all existing callbacks to use guile callbacks. Touched
	many files.

	* src/scm/options.scm: added an option change callback mechanism.

2000-02-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/options.scm: new file. Moved the general options code
	here. Modularized the options code.

2000-01-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c: use the last date entered in the blank split
	for the date of the new blank split.

	* src/scm/prefs.scm: use hash for storing options

2000-01-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: deleted hash-for-each. This is defined
	in slib2c6, which we are requiring anyway. Not the thunk for this
	should accept two args: the key and the value.

	* src/register/QuickFill.c: add sorting option to choose between
	LIFO and alphabetic orders.

2000-01-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: Used Matt Martin's guile error catching
	code to print errors from gnc:load.

2000-01-28  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-header.c (pointer_on_resize_line): Fix a
	problem with the limits.  Now the last column is resizable.
	(gnucash_header_event): Check for which button is pressed/released.

2000-01-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): set format of
 	price cell in stock registers to 4 decimal places.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_scroll_event):
 	new function. Do mouse wheel scrolling in gnome register.

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	use printDate to find a date width using the current date style.
	(gnucash_style_layout_init): use i18n'd string to set transfer
	from field width.

	* Removed uses of nana and dependencies on nana.

	* src/scm/report/transaction-report.scm: change to handle new
 	reports.

	* src/scm/report/dummy.scm: change to handle new reports.

	* src/scm/report.scm: Change reports so that they have a function
 	which generates a new set of options. Change the report running
 	functions to accommodate this.

	* src/FileDialog.c: avoid showing multiple error dialogs.

	* src/guile/gfec.c (gfec_catcher): new file with functions for
 	running scheme code with error handlers. Grabbed this off the
 	guile faq and made a few mods.

	* src/gnome/window-report.c: modify to use the new gfec routines.

2000-01-27  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm
	(tr-report-primary-key-op),(tr-report-primary-order-op)
	(tr-report-secondary-key-op),(tr-report-secondary-order-op):
	new options controlling sorting order for transaction report
	display.
	(gnc:tr-report-get-first-acc-name): get the name of the first
	"other" account" of a split's transaction
	(gnc:sort-predicate-component): return a predicate for comparing
	two split-scm's on a certain component
	(gnc:tr-report-make-sort-predicate): process sorting options,
	return a corresponding sorting predicate
	"Account Transactions" report: added sorting.

2000-01-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regRefresh): refresh the window name

	* src/gnome/dialog-edit.c: Rob Merkel's patch to reparent accounts.

	* src/engine/Account.c (xaccAccountHasAncestor): new function to
	determine whether an account has another as an ancestor.

	* src/gnome/account-tree.c (gnc_account_tree_set_filter): add a
 	filter function to an account tree to select a subset of accounts.

	* src/engine/Query.c: some new functions for setting the date
 	ranges.

	* src/gnome/window-register.c: add 'show earliest' and 'show
 	latest' options to the date range window.

2000-01-25  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-grid.c (gnucash_grid_init):
 	Initialize the fonts here.

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_compile): Use sheet->grid->normal_font for
 	all the computations.  style->fonts[][] is now only used for
 	drawing in gnucash-grid, etc. when it's non-NULL.

2000-01-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): make the action
	cell accept strings not in the list.

	* src/register/gnome/combocell-gnome.c (xaccComboCellSetStrict):
	new function that determines whether the combo accepts strings
	not in the list. Defaults to 'does not accept'.


2000-01-23  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c: Many functions touched.
  	Fairly extensive changes to how the layouts and dimensions are
 	handled.  We now lump together cursors which should have same
 	dimensions (e.g. all the single line cursors have the same layout
 	and dimension data).

2000-01-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_key_press_event): oh, what a hack! The extra stuff
 	is to make sure the selection is changed appropriately according
 	to the key that is pressed. Some of the logic is extracted from
 	gtkentry.c so the behavior is similar. We have to do this because
 	the entry widget is not realized and thus does not change its
 	selection as usual. However, we can't realize it, see the
 	explanation below.

	* src/register/gnome/combocell-gnome.c: added quickfilling

	* src/register/quickfillcell.c (quick_modify): new code for gnome,
	old code for motif. motif doesn't support the cursor position and
	selection args.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): ok,
 	*don't* put the entry in a widget. We can't have it realized
 	because it screws up the selection changes during the insert/
 	delete callbacks. We're going to have to fake the other
 	functionality.

	* src/register/QuickFill.c: make quickfill work on non-alphabet
	characters.
	(xaccGetQuickFillStr): new function search for a prefix match on
	more than one character at a time.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_button_release_event): new function to track button
 	release for dragging purposes.
	(gnucash_motion_event): new function for tracking mouse movement
 	and updating the selection region.
	(gnucash_sheet_init): initialize top_block_offset
	(gnucash_sheet_set_top_row): adjust the new top row to show as many
	rows as possible.
	(gnucash_sheet_vadjustment_value_changed): compute visible range
	after adjusting top block in smooth scrolling.
	(gnucash_sheet_compute_visible_range): start at the top_block_offset
	(gnucash_sheet_update_adjustments): scroll faster

2000-01-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_button_press_event):
 	if we're mousing in the current cell, don't bother going through
 	modify_update and all that jazz, but only if we are currently
 	editing. This makes sure the reconcile cell still gets its enters.

	* src/register/gnome/gnucash-item-edit.c
 	(item_edit_set_cursor_pos): add option to extend selection.

2000-01-20  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Fixed date bug, ensuring
	"to" date is treated as a <= rather than a <.

2000-01-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): put the
	editing entry into a canvas item so it will get realized. It needs
	to be realized for full functionality.
	(gnucash_sheet_modify_current_cell): add new args to modify update.
	(gnucash_sheet_insert_cb): new args for modify update
	(gnucash_sheet_delete_cb): new args for modify update

	* src/register/gnome/gnucash-item-edit.c (item_edit_destroy): only
 	disconnect if the editor hasn't been destroyed.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_activate_cursor_cell): added new args for enter
 	update. change entry widget appropriately.

	* src/register/table-allgui.c (gnc_table_enter_update): added args
 	to set cursor position and highlighted selection.

	* src/scm/prefs.scm (gnc:save-options): truncate the options file
 	when opening.

	* src/register/gnome/gnucash-item-edit.c (item_edit_draw_info):
 	calc regions for the highlighted portion of the text.
	(item_edit_draw): draw the highlighted portion of the text.

2000-01-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/gnucash.c (gnucash_lowlev_app_init): use DEBUG and PERR
	instead of print(stderr, ...);

	* src/scm/prefs.scm: new technique for saving options. Easier
	to generalize to other option databases.

	* src/gnome/window-html.c (gnc_html_load): set button states at
	the beginning, in case report doesn't work.

	* src/scm/report.scm: catch exceptions in executing the report

	* src/gnome/window-report.c (reportJumpCB): report errors that occur
	in executing the report.

	* src/register/table-allgui.c (gnc_table_traverse_update): use the
	return value consistently to indicate no move.

	* src/scm/path.scm (gnc:make-home-dir): new function. creates gnc dir

	* src/scm/main.scm: don't abort if user config file fails

	* src/scm/prefs.scm: make options save to ~/.gnucash/config.auto

	* src/gnome/dialog-options.c (gnc_option_create_account_widget):
 	if not multiple selection, use browse mode so user has to select
 	an account.
	(gnc_option_set_ui_widget): when making account list widget, connect
	the signals after the value has been set so the dialog isn't already
	in a changed state.

2000-01-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: add a test for slib >= 2c6.

2000-01-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (gnc_ui_accWindow_list_box_create): Put
 	the account types in a scrolled window.
	(gnc_ui_accWindow_tree_select): scroll the list types when a new
 	type is selected.
	(accWindow): remember window size and recreate it.

	* src/engine/util.c (xaccParseQIFAmount): rename this from
	xaccParseUSAmount to explicitly reflect its only usage. Modify
	the parsing to guess what symbol is used as a decimal point.

2000-01-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-report.c (gnc_report_export): add error checking
	and i18n messages.

	* src/gnome/window-html.c (gnc_html_load): set toolbar button
	states at end.

2000-01-15  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/window-report.c (gnc_report_export): new function to
 	allow generated HTML reports to be exported to a file.
	(reportWindow): added a button to the toolbar for exporting HTML

2000-01-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Makefile.config.finish: Get rid of xemacs mode comments.

	* configure.in: Move the commands at the end of configure.in into
 	the EXTRA-CMDS section of AC_OUTPUT so that config.status will
 	redo them. Don't bother defining GNC_RUNTIME_* vars as they are
	not substituted using AC_OUTPUT.

2000-01-15  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (struct   _CellLayoutInfo):
	Add new flags for attributes the user can change interactively.


	* src/register/gnome/gnucash-style.c (compute_cell_origins_[xy]):
	Precompute these since they stay fixed until dimensions change.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw):
	Be sure rect.width is non-negative.  Also, we draw all the
	rows in the header now.
	(gnucash_header_set_arg): Remove the ARG_ROW argument.
	For ARG_CURSOR_TYPE, only reconfigure the header
	when the type changes.  This optimizes the drawing a bit.
	(gnucash_header_reconfigure): We're drawing all rows now, so
	use the proper height.  
	(gnucash_header_event): Implement resizing of columns.  This is
	a bit rough in places, because we have to take cell alignments
	into account.  Need to work more on the styles.
	(gnucash_header_draw): Support dynamic resizing in the header,
	to give the user feedback during the resize.

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): Optimize
	so it draws only the needed cells, not the entire row.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_init): Add a
 	compile time option for smooth vertical scrolling.  Later we can
 	add user selectable scrolling if we decide it's worth it.
	(gnucash_sheet_make_cell_visible): support smooth scrolling.
	(gnucash_sheet_update_adjustments): ditto
	(gnucash_sheet_vadjustment_value_changed): ditto
	(gnucash_sheet_create): ditto
	(gnucash_sheet_y_pixel_to_block): New function.  Convert a canvas
 	y-coordinate to a virtual row.

2000-01-14  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Added initial balance
	and summary displays.

2000-01-12  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Added balance field,
	running totals, patched for empty-second-split case, fixed
	other bugs, added documentation.

2000-01-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Apply Jan Schrage's doc patch.

	* src/gnome/window-reconcile.c (recnWindow): tighter arrangement
	of the buttons.

	* src/g-wrap/gnc.gwp: removed wrap of private engine function.

	* src/engine/util.c (gnc_localeconv): new function to get a lconv
	structure for locale info.
	(PrintAmt): add argument which determines whether amounts are
	monetary or not. Use locale information to get separators.
	(xaccSPrintAmount): first cut at printing i18n'd amounts.
	(xaccParseAmount): new function for parsing i18n'd amounts,
	both monetary and non-monetary.

	* src/register/splitreg.c (xaccInitSplitRegister): let the price
 	cell format be the default monetary format. Set the shares cell
 	and, for stock registers, the credit and debit cells to
 	non-monetary cells.

	* src/register/pricecell.c (xaccSetPriceCellMonetary): new
 	function for setting 'monetary' member.

	* src/register/pricecell.h: add a 'monetary' boolean member
	of price cells which indicate whether the value should be
	parsed as money or not.

2000-01-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c: print price cells in a monetary format,
 	not 4 place decimal notation.

	* src/gnome/window-register.c (regRefresh): print separators in
 	the amounts at the bottom of the register window.

	* Applied Ken Yamaguchi's QIF import patch.

	* src/scm/prefs.scm: modified the account list option so
	that it returns the default-getter value until explicitly
	set.

2000-01-09  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Added a pile of stuff,
	should now produce a HTML formatted report containing basic info.
	Unfortunately, crashes gtk-xmhtml at this stage.

2000-01-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: Added a check for slib.

2000-01-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* make-gnucash-patch: changed aclocal.m4 to lib/g-wrap/aclocal.m4
 	in the exclude list, so people can patch the main aclocal.m4 file.

2000-01-07  Jan Schrage <jan.schrage@urz.uni-heidelberg.de>

	* configure.in: for --opt-style-install add $prefix/include
	and $prefix/lib to $CPPFLAGS and $CFLAGS respectively to fix
	broken check for nana.

2000-01-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* various and sundry: apply Laurent P{'e}lecq's i18n with gettext
 	patch. Move raw strings from gnome code into message database.

	* src/gnome/window-report.c: modify for changes to window-html.
	Make sure properties dialog callback only changes the window if
	we are on that page.

	* src/gnome/window-help.c: modify for the changes to window-html

	* src/gnome/window-html.c: enhance window. Titles and buttons
	are now associated with each history item, not the whole window.

	* src/gnome/dialog-options.c: added support for account list
	guile options.

2000-01-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/option-util.c: new functions for sending and receiving
 	lists of accounts to guile.

	* src/gnome/account-tree.c: modified this widget so that
	it keeps track of a list of selected accounts. Normal mode
	is still single selection.

2000-01-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (gnc_ui_accWindow_list_select_cb):
 	prevent user from selecting illegal account types.

2000-01-02  Peter Pointner  <peter@wuzel.m.isar.de>

	* configure.in: disable qt build by default. --enable-qt enables it.

	* Makefile.in: new targets qt.static and qt.disable

	* make-gnucash-patch: exclude *.moc

	* src/g-wrap/gnc.gwp (current-gnc-compile-flavor): add flavor qt.static

	* src/qt/* and src/register/*-qt.*: assorted changes to make the
	  qt version compile. 

2000-01-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: redid this window. Put style, sort
 	order, and date range into menu bar. Put toolbar under menu.
	Added status bar at bottom.

	* src/register/table-allgui.c (xaccVerifyCursorPosition): return
 	boolean indicating whether cursor was repositioned.
	(wrapVerifyCursorPosition): use return value from above in
 	deciding whether to refresh UI.

	* src/SplitLedger.c (xaccSRCancelCursorSplitChanges): move off of
 	an EXACT_ONLY cell, if on one.

2000-01-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.h: uses ints, not shorts for values.

	* src/SplitLedger.c (xaccSRLoadRegister): use the function below
 	to find the cell where to land on.
	(xaccSRLoadRegister): fix a bug with auto mode to single/double
 	mode transition.

	* src/register/table-allgui.c (gnc_table_find_valid_cell_horiz):
	new function. Find a valid cell in the row, starting at the
	given coordinates and fanning out.

	* src/register/basiccell.h: add a new kind of io_flag.
	XACC_CELL_ALLOW_EXACT_ONLY means a cell can only be entered
	when the user specifically indicates that cell. Right now,
	this means only a mouse pointer clicked on that cell. This
	is used to prevent the reconcile cell from acting strangely.

	* src/register/table-allgui.c (gnc_table_traverse_update): do left
 	traversals a little better.

	* src/gnome/window-html.c (htmlKeyCB): handle keyboard horizontal
 	scrolling.
